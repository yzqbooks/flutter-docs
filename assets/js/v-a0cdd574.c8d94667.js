"use strict";(self.webpackChunkflutter_docs=self.webpackChunkflutter_docs||[]).push([[4383],{75327:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-a0cdd574","path":"/chapter5/container.html","title":"5.4 Container","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]},{"level":3,"title":"Padding和Margin","slug":"padding和margin","link":"#padding和margin","children":[]}],"git":{"createdTime":1654491188000,"updatedTime":1654491188000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":2.35,"words":704},"filePathRelative":"chapter5/container.md","localizedDate":"2022年6月6日","excerpt":""}')},44598:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var t=a(6808);const p=a.p+"assets/img/5-9.778119c9.png",e=a.p+"assets/img/5-10.cb1bac2a.png",c=[(0,t.uE)('<h1 id="_5-4-container" tabindex="-1"><a class="header-anchor" href="#_5-4-container" aria-hidden="true">#</a> 5.4 Container</h1><p>我们在前面的章节示例中多次用到过<code>Container</code>组件，本节我们就详细介绍一下<code>Container</code>组件。<code>Container</code>是一个组合类容器，它本身不对应具体的<code>RenderObject</code>，它是<code>DecoratedBox</code>、<code>ConstrainedBox、Transform</code>、<code>Padding</code>、<code>Align</code>等组件组合的一个多功能容器，所以我们只需通过一个<code>Container</code>组件可以实现同时需要装饰、变换、限制的场景。下面是<code>Container</code>的定义：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Container</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>alignment<span class="token punctuation">,</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>padding<span class="token punctuation">,</span> <span class="token comment">//容器内补白，属于decoration的装饰范围</span>\n  <span class="token class-name">Color</span> color<span class="token punctuation">,</span> <span class="token comment">// 背景色</span>\n  <span class="token class-name">Decoration</span> decoration<span class="token punctuation">,</span> <span class="token comment">// 背景装饰</span>\n  <span class="token class-name">Decoration</span> foregroundDecoration<span class="token punctuation">,</span> <span class="token comment">//前景装饰</span>\n  double width<span class="token punctuation">,</span><span class="token comment">//容器的宽度</span>\n  double height<span class="token punctuation">,</span> <span class="token comment">//容器的高度</span>\n  <span class="token class-name">BoxConstraints</span> constraints<span class="token punctuation">,</span> <span class="token comment">//容器大小的限制条件</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>margin<span class="token punctuation">,</span><span class="token comment">//容器外补白，不属于decoration的装饰范围</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>transform<span class="token punctuation">,</span> <span class="token comment">//变换</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>child<span class="token punctuation">,</span>\n  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Container</code>的大多数属性在介绍其它容器时都已经介绍过了，不再赘述，但有两点需要说明：</p><ul><li>容器的大小可以通过<code>width</code>、<code>height</code>属性来指定，也可以通过<code>constraints</code>来指定；如果它们同时存在时，<code>width</code>、<code>height</code>优先。实际上Container内部会根据<code>width</code>、<code>height</code>来生成一个<code>constraints</code>。</li><li><code>color</code>和<code>decoration</code>是互斥的，如果同时设置它们则会报错！实际上，当指定<code>color</code>时，<code>Container</code>内会自动创建一个<code>decoration</code>。</li></ul><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例" aria-hidden="true">#</a> 实例</h3><p>我们通过<code>Container</code>来实现如图5-9所示的卡片：</p><p><img src="'+p+'" alt="图5-9"></p><p>实现代码如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Container</span><span class="token punctuation">(</span>\n  margin<span class="token punctuation">:</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>top<span class="token punctuation">:</span> <span class="token number">50.0</span><span class="token punctuation">,</span> left<span class="token punctuation">:</span> <span class="token number">120.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  constraints<span class="token punctuation">:</span> <span class="token class-name">BoxConstraints</span><span class="token punctuation">.</span><span class="token function">tightFor</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">200.0</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">150.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//卡片大小</span>\n  decoration<span class="token punctuation">:</span> <span class="token class-name">BoxDecoration</span><span class="token punctuation">(</span>  <span class="token comment">//背景装饰</span>\n    gradient<span class="token punctuation">:</span> <span class="token class-name">RadialGradient</span><span class="token punctuation">(</span> <span class="token comment">//背景径向渐变</span>\n      colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>orange<span class="token punctuation">]</span><span class="token punctuation">,</span>\n      center<span class="token punctuation">:</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>topLeft<span class="token punctuation">,</span>\n      radius<span class="token punctuation">:</span> <span class="token number">.98</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    boxShadow<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">//卡片阴影</span>\n      <span class="token class-name">BoxShadow</span><span class="token punctuation">(</span>\n        color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>black54<span class="token punctuation">,</span>\n        offset<span class="token punctuation">:</span> <span class="token class-name">Offset</span><span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        blurRadius<span class="token punctuation">:</span> <span class="token number">4.0</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  transform<span class="token punctuation">:</span> <span class="token class-name">Matrix4</span><span class="token punctuation">.</span><span class="token function">rotationZ</span><span class="token punctuation">(</span><span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//卡片倾斜变换</span>\n  alignment<span class="token punctuation">:</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span> <span class="token comment">//卡片内文字居中</span>\n  child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>\n    <span class="token comment">//卡片文字</span>\n    <span class="token string-literal"><span class="token string">&quot;5.20&quot;</span></span><span class="token punctuation">,</span> style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token number">40.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n <span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到<code>Container</code>具备多种组件的功能，通过查看<code>Container</code>源码，我们会很容易发现它正是前面我们介绍过的多种组件组合而成。在Flutter中，<code>Container</code>组件也正是组合优先于继承的实例。</p><h3 id="padding和margin" tabindex="-1"><a class="header-anchor" href="#padding和margin" aria-hidden="true">#</a> Padding和Margin</h3><p>接下来我们来研究一下<code>Container</code>组件<code>margin</code>和<code>padding</code>属性的区别:</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token class-name">Container</span><span class="token punctuation">(</span>\n  margin<span class="token punctuation">:</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">20.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//容器外补白</span>\n  color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>orange<span class="token punctuation">,</span>\n  child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello world!&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token class-name">Container</span><span class="token punctuation">(</span>\n  padding<span class="token punctuation">:</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">20.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//容器内补白</span>\n  color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>orange<span class="token punctuation">,</span>\n  child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello world!&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如图 5-10 所示：</p><p><img src="'+e+'" alt="图5-10"></p><p>可以发现，直观的感觉就是<code>margin</code>的留白是在容器外部，而<code>padding</code>的留白是在容器内部，读者需要记住这个差异。事实上，<code>Container</code>内<code>margin</code>和<code>padding</code>都是通过<code>Padding</code> 组件来实现的，上面的示例代码实际上等价于：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token class-name">Padding</span><span class="token punctuation">(</span>\n  padding<span class="token punctuation">:</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">20.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  child<span class="token punctuation">:</span> <span class="token class-name">DecoratedBox</span><span class="token punctuation">(</span>\n    decoration<span class="token punctuation">:</span> <span class="token class-name">BoxDecoration</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>orange<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello world!&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token class-name">DecoratedBox</span><span class="token punctuation">(</span>\n  decoration<span class="token punctuation">:</span> <span class="token class-name">BoxDecoration</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>orange<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  child<span class="token punctuation">:</span> <span class="token class-name">Padding</span><span class="token punctuation">(</span>\n    padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">20.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello world!&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',18)],o={},i=(0,a(18580).Z)(o,[["render",function(n,s){return(0,t.wg)(),(0,t.iD)("div",null,c)}]])},18580:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);