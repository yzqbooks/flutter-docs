"use strict";(self.webpackChunkflutter_docs=self.webpackChunkflutter_docs||[]).push([[9657],{82853:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-ca593c84","path":"/chapter15/entry.html","title":"15.6 APP入口及主页","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"15.6.1 APP入口","slug":"_15-6-1-app入口","link":"#_15-6-1-app入口","children":[]},{"level":2,"title":"15.6.2 主页","slug":"_15-6-2-主页","link":"#_15-6-2-主页","children":[]},{"level":2,"title":"15.6.3 抽屉菜单","slug":"_15-6-3-抽屉菜单","link":"#_15-6-3-抽屉菜单","children":[]}],"git":{"createdTime":1654491188000,"updatedTime":1654491188000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":8.09,"words":2428},"filePathRelative":"chapter15/entry.md","localizedDate":"2022年6月6日","excerpt":""}')},91017:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var t=a(6808);const p=a.p+"assets/img/15-1.c8d23b09.png",e=a.p+"assets/img/15-2.92d0b960.png",c=a.p+"assets/img/15-3.5c136edc.png",o=a.p+"assets/img/15-4.4ae97f14.png",l=[(0,t.uE)('<h1 id="_15-6-app入口及主页" tabindex="-1"><a class="header-anchor" href="#_15-6-app入口及主页" aria-hidden="true">#</a> 15.6 APP入口及主页</h1><p>本节来介绍一下APP入口及首页。</p><h2 id="_15-6-1-app入口" tabindex="-1"><a class="header-anchor" href="#_15-6-1-app入口" aria-hidden="true">#</a> 15.6.1 APP入口</h2><p><code>main</code>函数为APP入口函数，实现如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Global</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token class-name">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>初始化完成后才会加载UI(<code>MyApp</code>)，<code>MyApp</code> 是应用的入口Widget，实现如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">MultiProvider</span><span class="token punctuation">(</span>\n      providers<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        <span class="token class-name">ChangeNotifierProvider</span><span class="token punctuation">(</span>create<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">ThemeModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token class-name">ChangeNotifierProvider</span><span class="token punctuation">(</span>create<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">UserModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token class-name">ChangeNotifierProvider</span><span class="token punctuation">(</span>create<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">LocaleModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token class-name">Consumer2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeModel</span><span class="token punctuation">,</span> <span class="token class-name">LocaleModel</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>\n        builder<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">,</span> themeModel<span class="token punctuation">,</span> localeModel<span class="token punctuation">,</span> child<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token class-name">MaterialApp</span><span class="token punctuation">(</span>\n            theme<span class="token punctuation">:</span> <span class="token class-name">ThemeData</span><span class="token punctuation">(</span>\n              primarySwatch<span class="token punctuation">:</span> themeModel<span class="token punctuation">.</span>theme<span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            onGenerateTitle<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">{</span>\n              <span class="token keyword">return</span> <span class="token class-name">GmLocalizations</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>title<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            home<span class="token punctuation">:</span> <span class="token class-name">HomeRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            locale<span class="token punctuation">:</span> localeModel<span class="token punctuation">.</span><span class="token function">getLocale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token comment">//我们只支持美国英语和中文简体</span>\n            supportedLocales<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n              <span class="token keyword">const</span> <span class="token class-name">Locale</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;en&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;US&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 美国英语</span>\n              <span class="token keyword">const</span> <span class="token class-name">Locale</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;zh&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;CN&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 中文简体</span>\n              <span class="token comment">//其它Locales</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            localizationsDelegates<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n              <span class="token comment">// 本地化的代理类</span>\n              <span class="token class-name">GlobalMaterialLocalizations</span><span class="token punctuation">.</span>delegate<span class="token punctuation">,</span>\n              <span class="token class-name">GlobalWidgetsLocalizations</span><span class="token punctuation">.</span>delegate<span class="token punctuation">,</span>\n              <span class="token class-name">GmLocalizationsDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            localeResolutionCallback<span class="token punctuation">:</span> <span class="token punctuation">(</span>_locale<span class="token punctuation">,</span> supportedLocales<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>localeModel<span class="token punctuation">.</span><span class="token function">getLocale</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">//如果已经选定语言，则不跟随系统</span>\n                <span class="token keyword">return</span> localeModel<span class="token punctuation">.</span><span class="token function">getLocale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                <span class="token comment">//跟随系统</span>\n                <span class="token class-name">Locale</span> locale<span class="token punctuation">;</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>supportedLocales<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>_locale<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  locale<span class="token operator">=</span> _locale<span class="token operator">!</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                  <span class="token comment">//如果系统语言不是中文简体或美国英语，则默认使用美国英语</span>\n                  locale<span class="token operator">=</span> <span class="token class-name">Locale</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;en&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;US&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">return</span> locale<span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token comment">// 注册路由表</span>\n            routes<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">WidgetBuilder</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>\n              <span class="token string-literal"><span class="token string">&quot;login&quot;</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">LoginRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token string-literal"><span class="token string">&quot;themes&quot;</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">ThemeChangeRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token string-literal"><span class="token string">&quot;language&quot;</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">LanguageRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中：</p><ol><li>我们的根widget是<code>MultiProvider</code>，它将主题、用户、语言三种状态绑定到了应用的根上，如此一来，任何路由中都可以通过<code>Provider.of()</code>来获取这些状态，也就是说这三种状态是全局共享的！</li><li><code>HomeRoute</code>是应用的主页。</li><li>在构建<code>MaterialApp</code>时，我们配置了APP支持的语言列表，以及监听了系统语言改变事件；另外<code>MaterialApp</code>消费（依赖）了<code>ThemeModel</code>和<code>LocaleModel</code>，所以当APP主题或语言改变时<code>MaterialApp</code>会重新构建</li><li>我们注册了命名路由表，以便在APP中可以直接通过路由名跳转。</li><li>为了支持多语言（本APP中我们支持美国英语和中文简体两种语言）我们实现了一个<code>GmLocalizationsDelegate</code>，子Widget中都可以通过<code>GmLocalizations</code>来动态获取APP当前语言对应的文案。关于<code>GmLocalizationsDelegate</code>和<code>GmLocalizations</code>的实现方式读者可以参考“国际化”一章中的介绍，此处不再赘述。</li></ol><h2 id="_15-6-2-主页" tabindex="-1"><a class="header-anchor" href="#_15-6-2-主页" aria-hidden="true">#</a> 15.6.2 主页</h2><p>为了简单起见，当APP启动后，如果之前已登录了APP，则显示该用户项目列表；如果之前未登录，则显示一个登录按钮，点击后跳转到登录页。另外，我们实现一个抽屉菜单，里面包含当前用户头像及APP的菜单。下面我们先看看要实现的效果，如图15-1、15-2所示：</p><p><img src="'+p+'" alt="15-1"><img src="'+e+'" alt="15-2"></p><p>我们在“lib/routes”下创建一个“home_page.dart”文件，实现如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">HomeRoute</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>\n  <span class="token metadata function">@override</span>\n  _HomeRouteState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_HomeRouteState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> _HomeRouteState <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HomeRoute</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token keyword">static</span> <span class="token keyword">const</span> loadingTag <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;##loading##&quot;</span></span><span class="token punctuation">;</span> <span class="token comment">//表尾标记</span>\n  <span class="token keyword">var</span> _items <span class="token operator">=</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Repo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token class-name">Repo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>name <span class="token operator">=</span> loadingTag<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  bool hasMore <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//是否还有数据</span>\n  int page <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//当前请求的是第几页</span>\n  \n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">Scaffold</span><span class="token punctuation">(</span>\n      appBar<span class="token punctuation">:</span> <span class="token class-name">AppBar</span><span class="token punctuation">(</span>\n        title<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token class-name">GmLocalizations</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>home<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      body<span class="token punctuation">:</span> <span class="token function">_buildBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 构建主页面</span>\n      drawer<span class="token punctuation">:</span> <span class="token class-name">MyDrawer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//抽屉菜单</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment">// 省略</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，主页的标题（title）我们是通过<code>GmLocalizations.of(context).home</code>来获得，<code>GmLocalizations</code>是我们提供的一个<code>Localizations</code>类，用于支持多语言，因此当APP语言改变时，凡是使用<code>GmLocalizations</code>动态获取的文案都会是相应语言的文案，这在前面“国际化”一章中已经介绍过，读者可以前翻查阅。</p><p>我们通过 <code>_buildBody()</code>方法来构建主页内容，<code>_buildBody()</code>方法实现代码如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>  <span class="token class-name">Widget</span> <span class="token function">_buildBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">UserModel</span> userModel <span class="token operator">=</span> <span class="token class-name">Provider</span><span class="token punctuation">.</span>of<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserModel</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userModel<span class="token punctuation">.</span>isLogin<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">//用户未登录，显示登录按钮</span>\n      <span class="token keyword">return</span> <span class="token class-name">Center</span><span class="token punctuation">(</span>\n        child<span class="token punctuation">:</span> <span class="token class-name">ElevatedButton</span><span class="token punctuation">(</span>\n          child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token class-name">GmLocalizations</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>login<span class="token punctuation">)</span><span class="token punctuation">,</span>\n          onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;login&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token comment">//已登录，则显示项目列表</span>\n      <span class="token keyword">return</span> <span class="token class-name">ListView</span><span class="token punctuation">.</span><span class="token function">separated</span><span class="token punctuation">(</span>\n        itemCount<span class="token punctuation">:</span> _items<span class="token punctuation">.</span>length<span class="token punctuation">,</span>\n        itemBuilder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">//如果到了表尾</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>_items<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">==</span> loadingTag<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">//不足100条，继续获取数据</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>hasMore<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token comment">//获取数据</span>\n              <span class="token function">_retrieveData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n              <span class="token comment">//加载时显示loading</span>\n              <span class="token keyword">return</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n                padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">16.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                alignment<span class="token punctuation">:</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n                child<span class="token punctuation">:</span> <span class="token class-name">SizedBox</span><span class="token punctuation">(</span>\n                  width<span class="token punctuation">:</span> <span class="token number">24.0</span><span class="token punctuation">,</span>\n                  height<span class="token punctuation">:</span> <span class="token number">24.0</span><span class="token punctuation">,</span>\n                  child<span class="token punctuation">:</span> <span class="token class-name">CircularProgressIndicator</span><span class="token punctuation">(</span>strokeWidth<span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n              <span class="token comment">//已经加载了100条数据，不再获取数据。</span>\n              <span class="token keyword">return</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n                alignment<span class="token punctuation">:</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n                padding<span class="token punctuation">:</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">16.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>\n                  <span class="token string-literal"><span class="token string">&quot;没有更多了&quot;</span></span><span class="token punctuation">,</span>\n                  style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>grey<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n          <span class="token comment">//显示单词列表项</span>\n          <span class="token keyword">return</span> <span class="token class-name">RepoItem</span><span class="token punctuation">(</span>_items<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        separatorBuilder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Divider</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码注释很清楚：如果用户未登录，显示登录按钮；如果用户已登录，则展示项目列表。</p><p><code>_retrieveData()</code> 方法用于获取项目列表，具体逻辑是：每次请求获取20条，当获取成功时，先判断是否还有数据（根据本次请求的项目条数是否等于期望的20条来判断还有没有更多的数据），然后将新获取的数据添加到<code>_items</code>中，然后更新状态，具体代码如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token comment">//请求数据</span>\n<span class="token keyword">void</span> <span class="token function">_retrieveData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">Git</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRepos</span><span class="token punctuation">(</span>\n    queryParameters<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token string-literal"><span class="token string">&#39;page&#39;</span></span><span class="token punctuation">:</span> page<span class="token punctuation">,</span>\n      <span class="token string-literal"><span class="token string">&#39;page_size&#39;</span></span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">//如果返回的数据小于指定的条数，则表示没有更多数据，反之则否</span>\n  hasMore <span class="token operator">=</span> data<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>length <span class="token operator">%</span> <span class="token number">20</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">//把请求到的新数据添加到items中</span>\n  <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _items<span class="token punctuation">.</span><span class="token function">insertAll</span><span class="token punctuation">(</span>_items<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    page<span class="token operator">++</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此需要注意，<code>Git(context).getRepos(…)</code>方法中需要<code>refresh</code>参数来判断是否使用缓存。</p><p><code>itemBuilder</code>为列表项的builder，我们需要在该回调中构建每一个列表项Widget。由于列表项构建逻辑较复杂，我们单独封装一个<code>RepoItem</code> Widget 专门用于构建列表项UI。<code>RepoItem</code> 实现如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;../index.dart&#39;</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">RepoItem</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 将`repo.id`作为RepoItem的默认key</span>\n  <span class="token class-name">RepoItem</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>repo<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token class-name">ValueKey</span><span class="token punctuation">(</span>repo<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">final</span> <span class="token class-name">Repo</span> repo<span class="token punctuation">;</span>\n\n  <span class="token metadata function">@override</span>\n  _RepoItemState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_RepoItemState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> _RepoItemState <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RepoItem</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> subtitle<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token class-name">Padding</span><span class="token punctuation">(</span>\n      padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>top<span class="token punctuation">:</span> <span class="token number">8.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token class-name">Material</span><span class="token punctuation">(</span>\n        color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">,</span>\n        shape<span class="token punctuation">:</span> <span class="token class-name">BorderDirectional</span><span class="token punctuation">(</span>\n          bottom<span class="token punctuation">:</span> <span class="token class-name">BorderSide</span><span class="token punctuation">(</span>\n            color<span class="token punctuation">:</span> <span class="token class-name">Theme</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>dividerColor<span class="token punctuation">,</span>\n            width<span class="token punctuation">:</span> <span class="token number">.5</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        child<span class="token punctuation">:</span> <span class="token class-name">Padding</span><span class="token punctuation">(</span>\n          padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>top<span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          child<span class="token punctuation">:</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>\n            crossAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">CrossAxisAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span>\n            children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n              <span class="token class-name">ListTile</span><span class="token punctuation">(</span>\n                dense<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                leading<span class="token punctuation">:</span> <span class="token function">gmAvatar</span><span class="token punctuation">(</span>\n                  <span class="token comment">//项目owner头像</span>\n                  widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>owner<span class="token punctuation">.</span>avatar_url<span class="token punctuation">,</span>\n                  width<span class="token punctuation">:</span> <span class="token number">24.0</span><span class="token punctuation">,</span>\n                  borderRadius<span class="token punctuation">:</span> <span class="token class-name">BorderRadius</span><span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                title<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>\n                  widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>owner<span class="token punctuation">.</span>login<span class="token punctuation">,</span>\n                  textScaleFactor<span class="token punctuation">:</span> <span class="token number">.9</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                subtitle<span class="token punctuation">:</span> subtitle<span class="token punctuation">,</span>\n                trailing<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>language<span class="token operator">?</span><span class="token operator">?</span><span class="token string-literal"><span class="token string">&#39;--&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token comment">// 构建项目标题和简介</span>\n              <span class="token class-name">Padding</span><span class="token punctuation">(</span>\n                padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">symmetric</span><span class="token punctuation">(</span>horizontal<span class="token punctuation">:</span> <span class="token number">16.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                child<span class="token punctuation">:</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>\n                  crossAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">CrossAxisAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span>\n                  children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n                    <span class="token class-name">Text</span><span class="token punctuation">(</span>\n                      widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>fork\n                          <span class="token operator">?</span> widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>full_name\n                          <span class="token punctuation">:</span> widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>name<span class="token punctuation">,</span>\n                      style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>\n                        fontSize<span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n                        fontWeight<span class="token punctuation">:</span> <span class="token class-name">FontWeight</span><span class="token punctuation">.</span>bold<span class="token punctuation">,</span>\n                        fontStyle<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>fork\n                            <span class="token operator">?</span> <span class="token class-name">FontStyle</span><span class="token punctuation">.</span>italic\n                            <span class="token punctuation">:</span> <span class="token class-name">FontStyle</span><span class="token punctuation">.</span>normal<span class="token punctuation">,</span>\n                      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token class-name">Padding</span><span class="token punctuation">(</span>\n                      padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>top<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                      child<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>description <span class="token operator">==</span> <span class="token keyword">null</span>\n                          <span class="token operator">?</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>\n                              <span class="token class-name">GmLocalizations</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>noDescription<span class="token punctuation">,</span>\n                              style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>\n                                  fontStyle<span class="token punctuation">:</span> <span class="token class-name">FontStyle</span><span class="token punctuation">.</span>italic<span class="token punctuation">,</span>\n                                  color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>grey<span class="token punctuation">[</span><span class="token number">700</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            <span class="token punctuation">)</span>\n                          <span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>\n                              widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>description<span class="token operator">!</span><span class="token punctuation">,</span>\n                              maxLines<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n                              style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>\n                                height<span class="token punctuation">:</span> <span class="token number">1.15</span><span class="token punctuation">,</span>\n                                color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blueGrey<span class="token punctuation">[</span><span class="token number">700</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                                fontSize<span class="token punctuation">:</span> <span class="token number">13</span><span class="token punctuation">,</span>\n                              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token comment">// 构建卡片底部信息</span>\n              <span class="token function">_buildBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 构建卡片底部信息</span>\n  <span class="token class-name">Widget</span> <span class="token function">_buildBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> paddingWidth <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token class-name">IconTheme</span><span class="token punctuation">(</span>\n      data<span class="token punctuation">:</span> <span class="token class-name">IconThemeData</span><span class="token punctuation">(</span>\n        color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>grey<span class="token punctuation">,</span>\n        size<span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token class-name">DefaultTextStyle</span><span class="token punctuation">(</span>\n        style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>grey<span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        child<span class="token punctuation">:</span> <span class="token class-name">Padding</span><span class="token punctuation">(</span>\n          padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">symmetric</span><span class="token punctuation">(</span>horizontal<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          child<span class="token punctuation">:</span> <span class="token class-name">Builder</span><span class="token punctuation">(</span>builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">var</span> children <span class="token operator">=</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n              <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>star<span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot; &quot;</span></span> <span class="token operator">+</span>\n                  widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>stargazers_count\n                      <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                      <span class="token punctuation">.</span><span class="token function">padRight</span><span class="token punctuation">(</span>paddingWidth<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>info_outline<span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot; &quot;</span></span> <span class="token operator">+</span>\n                  widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>open_issues_count\n                      <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                      <span class="token punctuation">.</span><span class="token function">padRight</span><span class="token punctuation">(</span>paddingWidth<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n              <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">MyIcons</span><span class="token punctuation">.</span>fork<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//我们的自定义图标</span>\n              <span class="token class-name">Text</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>forks_count<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padRight</span><span class="token punctuation">(</span>paddingWidth<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>fork<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              children<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Forked&quot;</span></span><span class="token punctuation">.</span><span class="token function">padRight</span><span class="token punctuation">(</span>paddingWidth<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>private <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              children<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n                <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>lock<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot; private&quot;</span></span><span class="token punctuation">.</span><span class="token function">padRight</span><span class="token punctuation">(</span>paddingWidth<span class="token punctuation">)</span><span class="token punctuation">)</span>\n              <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">return</span> <span class="token class-name">Row</span><span class="token punctuation">(</span>children<span class="token punctuation">:</span> children<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码有两点需要注意：</p><ol><li><p>在构建项目拥有者头像时调用了<code>gmAvatar(…)</code>方法，该方法是是一个全局工具函数，专门用于获取头像图片，实现如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Widget</span> <span class="token function">gmAvatar</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  double width <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">,</span>\n  double<span class="token operator">?</span> height<span class="token punctuation">,</span>\n  <span class="token class-name">BoxFit</span><span class="token operator">?</span> fit<span class="token punctuation">,</span>\n  <span class="token class-name">BorderRadius</span><span class="token operator">?</span> borderRadius<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> placeholder <span class="token operator">=</span> <span class="token class-name">Image</span><span class="token punctuation">.</span><span class="token function">asset</span><span class="token punctuation">(</span>\n      <span class="token string-literal"><span class="token string">&quot;imgs/avatar-default.png&quot;</span></span><span class="token punctuation">,</span> <span class="token comment">//头像占位图</span>\n      width<span class="token punctuation">:</span> width<span class="token punctuation">,</span>\n      height<span class="token punctuation">:</span> height\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token class-name">ClipRRect</span><span class="token punctuation">(</span>\n    borderRadius<span class="token punctuation">:</span> borderRadius <span class="token operator">?</span><span class="token operator">?</span> <span class="token class-name">BorderRadius</span><span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    child<span class="token punctuation">:</span> <span class="token class-name">CachedNetworkImage</span><span class="token punctuation">(</span>\n      imageUrl<span class="token punctuation">:</span> url<span class="token punctuation">,</span>\n      width<span class="token punctuation">:</span> width<span class="token punctuation">,</span>\n      height<span class="token punctuation">:</span> height<span class="token punctuation">,</span>\n      fit<span class="token punctuation">:</span> fit<span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> url<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span>placeholder<span class="token punctuation">,</span>\n      errorWidget<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> url<span class="token punctuation">,</span> error<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span>placeholder<span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码中调用了<code>CachedNetworkImage</code> 是cached_network_image包中提供的一个Widget，它不仅可以在图片加载过程中指定一个占位图，而且还可以对网络请求的图片进行缓存，更多详情读者可以自行查阅其文档。</p></li><li><p>由于Flutter 的Material 图标库中没有fork图标，所以我们在iconfont.cn上找了一个fork图标，然后根据“图片和Icon”一节中介绍的使用自定义字体图标的方法集成到了我们的项目中。</p></li></ol><h2 id="_15-6-3-抽屉菜单" tabindex="-1"><a class="header-anchor" href="#_15-6-3-抽屉菜单" aria-hidden="true">#</a> 15.6.3 抽屉菜单</h2><p>抽屉菜单分为两部分：顶部头像和底部功能菜单项。当用户未登录，则抽屉菜单顶部会显示一个默认的灰色占位图，若用户已登录，则会显示用户的头像。抽屉菜单底部有“换肤”和“语言”两个固定菜单，若用户已登录，则会多一个“注销”菜单。用户点击“换肤”和“语言”两个菜单项，会进入相应的设置页面。我们的抽屉菜单效果如图15-3、15-4所示：</p><p><img src="'+c+'" alt="15-3"><img src="'+o+'" alt="15-4"></p><p>实现代码如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">MyDrawer</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token class-name">MyDrawer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">Drawer</span><span class="token punctuation">(</span>\n      child<span class="token punctuation">:</span> <span class="token class-name">MediaQuery</span><span class="token punctuation">.</span><span class="token function">removePadding</span><span class="token punctuation">(</span>\n        context<span class="token punctuation">:</span> context<span class="token punctuation">,</span>\n        <span class="token comment">// DrawerHeader consumes top MediaQuery padding.</span>\n        removeTop<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        child<span class="token punctuation">:</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>\n          crossAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">CrossAxisAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span>\n          children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n            <span class="token function">_buildHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//构建抽屉菜单头部</span>\n            <span class="token class-name">Expanded</span><span class="token punctuation">(</span>child<span class="token punctuation">:</span> <span class="token function">_buildMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//构建功能菜单</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token class-name">Widget</span> <span class="token function">_buildHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserModel</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>\n      builder<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">,</span> <span class="token class-name">UserModel</span> value<span class="token punctuation">,</span> <span class="token class-name">Widget</span><span class="token operator">?</span> child<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token class-name">GestureDetector</span><span class="token punctuation">(</span>\n          child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n            color<span class="token punctuation">:</span> <span class="token class-name">Theme</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>primaryColor<span class="token punctuation">,</span>\n            padding<span class="token punctuation">:</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>top<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            child<span class="token punctuation">:</span> <span class="token class-name">Row</span><span class="token punctuation">(</span>\n              children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n                <span class="token class-name">Padding</span><span class="token punctuation">(</span>\n                  padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">symmetric</span><span class="token punctuation">(</span>horizontal<span class="token punctuation">:</span> <span class="token number">16.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  child<span class="token punctuation">:</span> <span class="token class-name">ClipOval</span><span class="token punctuation">(</span>\n                    <span class="token comment">// 如果已登录，则显示用户头像；若未登录，则显示默认头像</span>\n                    child<span class="token punctuation">:</span> value<span class="token punctuation">.</span>isLogin\n                        <span class="token operator">?</span> <span class="token function">gmAvatar</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>user<span class="token operator">!</span><span class="token punctuation">.</span>avatar_url<span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">)</span>\n                        <span class="token punctuation">:</span> <span class="token class-name">Image</span><span class="token punctuation">.</span><span class="token function">asset</span><span class="token punctuation">(</span>\n                            <span class="token string-literal"><span class="token string">&quot;imgs/avatar-default.png&quot;</span></span><span class="token punctuation">,</span>\n                            width<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span>\n                          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token class-name">Text</span><span class="token punctuation">(</span>\n                  value<span class="token punctuation">.</span>isLogin\n                      <span class="token operator">?</span> value<span class="token punctuation">.</span>user<span class="token operator">!</span><span class="token punctuation">.</span>login\n                      <span class="token punctuation">:</span> <span class="token class-name">GmLocalizations</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>login<span class="token punctuation">,</span>\n                  style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>\n                    fontWeight<span class="token punctuation">:</span> <span class="token class-name">FontWeight</span><span class="token punctuation">.</span>bold<span class="token punctuation">,</span>\n                    color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">,</span>\n                  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span>\n              <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>value<span class="token punctuation">.</span>isLogin<span class="token punctuation">)</span> <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;login&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 构建菜单项</span>\n  <span class="token class-name">Widget</span> <span class="token function">_buildMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserModel</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>\n      builder<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">,</span> <span class="token class-name">UserModel</span> userModel<span class="token punctuation">,</span> <span class="token class-name">Widget</span><span class="token operator">?</span> child<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> gm <span class="token operator">=</span> <span class="token class-name">GmLocalizations</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token class-name">ListView</span><span class="token punctuation">(</span>\n          children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n            <span class="token class-name">ListTile</span><span class="token punctuation">(</span>\n              leading<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>color_lens<span class="token punctuation">)</span><span class="token punctuation">,</span>\n              title<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>gm<span class="token punctuation">.</span>theme<span class="token punctuation">)</span><span class="token punctuation">,</span>\n              onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;themes&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token class-name">ListTile</span><span class="token punctuation">(</span>\n              leading<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>language<span class="token punctuation">)</span><span class="token punctuation">,</span>\n              title<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>gm<span class="token punctuation">.</span>language<span class="token punctuation">)</span><span class="token punctuation">,</span>\n              onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;language&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>userModel<span class="token punctuation">.</span>isLogin<span class="token punctuation">)</span>\n              <span class="token class-name">ListTile</span><span class="token punctuation">(</span>\n                leading<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>power_settings_new<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                title<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>gm<span class="token punctuation">.</span>logout<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token function">showDialog</span><span class="token punctuation">(</span>\n                    context<span class="token punctuation">:</span> context<span class="token punctuation">,</span>\n                    builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                      <span class="token comment">//退出账号前先弹二次确认窗</span>\n                      <span class="token keyword">return</span> <span class="token class-name">AlertDialog</span><span class="token punctuation">(</span>\n                        content<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>gm<span class="token punctuation">.</span>logoutTip<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        actions<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n                          <span class="token class-name">TextButton</span><span class="token punctuation">(</span>\n                            child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>gm<span class="token punctuation">.</span>cancel<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                          <span class="token class-name">TextButton</span><span class="token punctuation">(</span>\n                            child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>gm<span class="token punctuation">.</span>yes<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                              <span class="token comment">//该赋值语句会触发MaterialApp rebuild</span>\n                              userModel<span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n                              <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用户点击“注销”，<code>userModel.user</code> 会被置空，此时所有依赖<code>userModel</code>的组件都会被<code>rebuild</code>，如主页会恢复成未登录的状态。</p><p>本小节我们介绍了APP入口<code>MaterialApp</code>的一些配置，然后实现了APP的首页。后面我们将展示登录页、换肤页、语言切换页。</p>',32)],i={},u=(0,a(18580).Z)(i,[["render",function(n,s){return(0,t.wg)(),(0,t.iD)("div",null,l)}]])},18580:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);