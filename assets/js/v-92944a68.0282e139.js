"use strict";(self.webpackChunkflutter_docs=self.webpackChunkflutter_docs||[]).push([[1511],{68306:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-92944a68","path":"/chapter6/tabview.html","title":"6.9 TabBarView","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"6.9.1 TabBarView","slug":"_6-9-1-tabbarview","link":"#_6-9-1-tabbarview","children":[]},{"level":2,"title":"6.9.2 TabBar","slug":"_6-9-2-tabbar","link":"#_6-9-2-tabbar","children":[]},{"level":2,"title":"6.9.3 实例","slug":"_6-9-3-实例","link":"#_6-9-3-实例","children":[{"level":3,"title":"页面缓存","slug":"页面缓存","link":"#页面缓存","children":[]}]}],"git":{"createdTime":1654491188000,"updatedTime":1654491188000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":3.12,"words":935},"filePathRelative":"chapter6/tabview.md","localizedDate":"2022年6月6日","excerpt":""}')},89050:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var t=a(6808);const p=a.p+"assets/img/6-20.ed3fe210.png",e=a.p+"assets/img/6-21.83f0c612.gif",c=[(0,t.uE)('<h1 id="_6-9-tabbarview" tabindex="-1"><a class="header-anchor" href="#_6-9-tabbarview" aria-hidden="true">#</a> 6.9 TabBarView</h1><p>TabBarView 是 Material 组件库中提供了 Tab 布局组件，通常和 TabBar 配合使用。</p><h2 id="_6-9-1-tabbarview" tabindex="-1"><a class="header-anchor" href="#_6-9-1-tabbarview" aria-hidden="true">#</a> 6.9.1 TabBarView</h2><p>TabBarView 封装了 PageView，它的构造方法很简单</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code> <span class="token class-name">TabBarView</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span>\n  required <span class="token keyword">this</span><span class="token punctuation">.</span>children<span class="token punctuation">,</span> <span class="token comment">// tab 页</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>controller<span class="token punctuation">,</span> <span class="token comment">// TabController</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>physics<span class="token punctuation">,</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>dragStartBehavior <span class="token operator">=</span> <span class="token class-name">DragStartBehavior</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span> \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TabController 用于监听和控制 TabBarView 的页面切换，通常和 TabBar 联动。如果没有指定，则会在组件树中向上查找并使用最近的一个 <code>DefaultTabController</code> 。</p><h2 id="_6-9-2-tabbar" tabindex="-1"><a class="header-anchor" href="#_6-9-2-tabbar" aria-hidden="true">#</a> 6.9.2 TabBar</h2><p>TabBar 为 TabBarView 的导航标题，如图6-20所示：</p><p><img src="'+p+'" alt="图6-20"></p><p>TabBar 有很多配置参数，通过这些参数我们可以定义 TabBar 的样式，很多属性都是在配置 indicator 和 label，拿上图来举例，Label 是每个Tab 的文本，indicator 指 “历史” 下面的白色下划线。</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">const</span> <span class="token class-name">TabBar</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span>\n  required <span class="token keyword">this</span><span class="token punctuation">.</span>tabs<span class="token punctuation">,</span> <span class="token comment">// 具体的 Tabs，需要我们创建</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>controller<span class="token punctuation">,</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>isScrollable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否可以滑动</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>padding<span class="token punctuation">,</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>indicatorColor<span class="token punctuation">,</span><span class="token comment">// 指示器颜色，默认是高度为2的一条下划线</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>automaticIndicatorColorAdjustment <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>indicatorWeight <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">,</span><span class="token comment">// 指示器高度</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>indicatorPadding <span class="token operator">=</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span> <span class="token comment">//指示器padding</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>indicator<span class="token punctuation">,</span> <span class="token comment">// 指示器</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>indicatorSize<span class="token punctuation">,</span> <span class="token comment">// 指示器长度，有两个可选值，一个tab的长度，一个是label长度</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>labelColor<span class="token punctuation">,</span> \n  <span class="token keyword">this</span><span class="token punctuation">.</span>labelStyle<span class="token punctuation">,</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>labelPadding<span class="token punctuation">,</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>unselectedLabelColor<span class="token punctuation">,</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>unselectedLabelStyle<span class="token punctuation">,</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>mouseCursor<span class="token punctuation">,</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>onTap<span class="token punctuation">,</span>\n  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span> \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TabBar 通常位于 AppBar 的底部，它也可以接收一个 TabController ，如果需要和 TabBarView 联动， TabBar 和 TabBarView 使用同一个 TabController 即可，注意，联动时 TabBar 和 TabBarView 的孩子数量需要一致。如果没有指定 <code>controller</code>，则会在组件树中向上查找并使用最近的一个 <code>DefaultTabController</code> 。另外我们需要创建需要的 tab 并通过 <code>tabs</code> 传给 TabBar， tab 可以是任何 Widget，不过Material 组件库中已经实现了一个 Tab 组件，我们一般都会直接使用它：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">const</span> <span class="token class-name">Tab</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token comment">//文本</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>icon<span class="token punctuation">,</span> <span class="token comment">// 图标</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>iconMargin <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>bottom<span class="token punctuation">:</span> <span class="token number">10.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">,</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>child<span class="token punctuation">,</span> <span class="token comment">// 自定义 widget</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意，<code>text</code> 和 <code>child</code> 是互斥的，不能同时制定。</p><h2 id="_6-9-3-实例" tabindex="-1"><a class="header-anchor" href="#_6-9-3-实例" aria-hidden="true">#</a> 6.9.3 实例</h2><p>下面我们看一个例子：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">TabViewRoute1</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>\n  <span class="token metadata function">@override</span>\n  _TabViewRoute1State <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_TabViewRoute1State</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> _TabViewRoute1State <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TabViewRoute1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token keyword">with</span> <span class="token class-name">SingleTickerProviderStateMixin</span> <span class="token punctuation">{</span>\n  late <span class="token class-name">TabController</span> _tabController<span class="token punctuation">;</span>\n  <span class="token class-name">List</span> tabs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;新闻&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;历史&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;图片&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token metadata function">@override</span>\n  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    _tabController <span class="token operator">=</span> <span class="token class-name">TabController</span><span class="token punctuation">(</span>length<span class="token punctuation">:</span> tabs<span class="token punctuation">.</span>length<span class="token punctuation">,</span> vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">Scaffold</span><span class="token punctuation">(</span>\n      appBar<span class="token punctuation">:</span> <span class="token class-name">AppBar</span><span class="token punctuation">(</span>\n        title<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;App Name&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        bottom<span class="token punctuation">:</span> <span class="token class-name">TabBar</span><span class="token punctuation">(</span>\n          controller<span class="token punctuation">:</span> _tabController<span class="token punctuation">,</span>\n          tabs<span class="token punctuation">:</span> tabs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Tab</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      body<span class="token punctuation">:</span> <span class="token class-name">TabBarView</span><span class="token punctuation">(</span> <span class="token comment">//构建</span>\n        controller<span class="token punctuation">:</span> _tabController<span class="token punctuation">,</span>\n        children<span class="token punctuation">:</span> tabs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token class-name">KeepAliveWrapper</span><span class="token punctuation">(</span>\n            child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n              alignment<span class="token punctuation">:</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n              child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> textScaleFactor<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  \n  <span class="token metadata function">@override</span>\n  <span class="token keyword">void</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 释放资源</span>\n    _tabController<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行后效果如图6-21所示：</p><p><img src="'+e+'" alt="图6-21"></p><p>滑动页面时顶部的 Tab 也会跟着动，点击顶部 Tab 时页面也会跟着切换。为了实现 TabBar 和 TabBarView 的联动，我们显式创建了一个 TabController，由于 TabController 又需要一个 TickerProvider （vsync 参数）， 我们又混入了 SingleTickerProviderStateMixin；由于 TabController 中会执行动画，持有一些资源，所以我们在页面销毁时必须得释放资源（dispose）。综上，我们发现创建 TabController 的过程还是比较复杂，实战中，如果需要 TabBar 和 TabBarView 联动，通常会创建一个 DefaultTabController 作为它们共同的父级组件，这样它们在执行时就会从组件树向上查找，都会使用我们指定的这个 DefaultTabController。我们修改后的实现如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">TabViewRoute2</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">List</span> tabs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;新闻&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;历史&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;图片&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token class-name">DefaultTabController</span><span class="token punctuation">(</span>\n      length<span class="token punctuation">:</span> tabs<span class="token punctuation">.</span>length<span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token class-name">Scaffold</span><span class="token punctuation">(</span>\n        appBar<span class="token punctuation">:</span> <span class="token class-name">AppBar</span><span class="token punctuation">(</span>\n          title<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;App Name&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          bottom<span class="token punctuation">:</span> <span class="token class-name">TabBar</span><span class="token punctuation">(</span>\n            tabs<span class="token punctuation">:</span> tabs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Tab</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        body<span class="token punctuation">:</span> <span class="token class-name">TabBarView</span><span class="token punctuation">(</span> <span class="token comment">//构建</span>\n          children<span class="token punctuation">:</span> tabs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token class-name">KeepAliveWrapper</span><span class="token punctuation">(</span>\n              child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n                alignment<span class="token punctuation">:</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n                child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> textScaleFactor<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到我们无需去手动管理 Controller 的生命周期，也不需要提供 SingleTickerProviderStateMixin，同时也没有其它的状态需要管理，也就不需要用 StatefulWidget 了，这样简单很多。</p><h3 id="页面缓存" tabindex="-1"><a class="header-anchor" href="#页面缓存" aria-hidden="true">#</a> 页面缓存</h3><p>因为TabBarView 内部封装了 PageView，如果要缓存页面，可以参考 PageView 一节中关于页面缓存的介绍。</p>',24)],o={},l=(0,a(18580).Z)(o,[["render",function(n,s){return(0,t.wg)(),(0,t.iD)("div",null,c)}]])},18580:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);