"use strict";(self.webpackChunkflutter_docs=self.webpackChunkflutter_docs||[]).push([[7326],{39348:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-3525ca88","path":"/chapter7/theme.html","title":"7.4 颜色和主题","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"7.4.1 颜色","slug":"_7-4-1-颜色","link":"#_7-4-1-颜色","children":[{"level":3,"title":"如何将颜色字符串转成 Color 对象","slug":"如何将颜色字符串转成-color-对象","link":"#如何将颜色字符串转成-color-对象","children":[]},{"level":3,"title":"颜色亮度","slug":"颜色亮度","link":"#颜色亮度","children":[]},{"level":3,"title":"MaterialColor","slug":"materialcolor","link":"#materialcolor","children":[]}]},{"level":2,"title":"7.4.2 Theme","slug":"_7-4-2-theme","link":"#_7-4-2-theme","children":[{"level":3,"title":"ThemeData","slug":"themedata","link":"#themedata","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]}]}],"git":{"createdTime":1654491188000,"updatedTime":1654491188000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":5.63,"words":1689},"filePathRelative":"chapter7/theme.md","localizedDate":"2022年6月6日","excerpt":""}')},15880:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var t=a(6808);const e=a.p+"assets/img/7-4.9c7e0d25.png",p=a.p+"assets/img/7-5.f649c1b3.jpeg",c=a.p+"assets/img/7-6.c5ba409b.png",o=a.p+"assets/img/7-7.07259667.png",l=[(0,t.uE)('<h1 id="_7-4-颜色和主题" tabindex="-1"><a class="header-anchor" href="#_7-4-颜色和主题" aria-hidden="true">#</a> 7.4 颜色和主题</h1><h2 id="_7-4-1-颜色" tabindex="-1"><a class="header-anchor" href="#_7-4-1-颜色" aria-hidden="true">#</a> 7.4.1 颜色</h2><p>在介绍主题前我们先了解一些Flutter中的 Color 类。Color 类中颜色以一个 int 值保存，我们知道显示器颜色是由红、绿、蓝三基色组成，每种颜色占8比特，存储结构如下：</p><table><thead><tr><th>Bit（位）</th><th>颜色</th></tr></thead><tbody><tr><td>0-7</td><td>蓝色</td></tr><tr><td>8-15</td><td>绿色</td></tr><tr><td>16-23</td><td>红色</td></tr><tr><td>24-31</td><td>Alpha (不透明度)</td></tr></tbody></table><p>上面表格中的的字段在 Color 类中都有对应的属性，而Color中的众多方法也就是操作这些属性的，由于大多比较简单，读者可以查看类定义了解。在此我们主要讨论两点：色值转换和亮度。</p><h3 id="如何将颜色字符串转成-color-对象" tabindex="-1"><a class="header-anchor" href="#如何将颜色字符串转成-color-对象" aria-hidden="true">#</a> <strong>如何将颜色字符串转成 Color 对象</strong></h3><p>如 Web 开发中的色值通常是一个字符串如&quot;#dc380d&quot;，它是一个 RGB 值，我们可以通过下面这些方法将其转为Color类：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xffdc380d</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//如果颜色固定可以直接使用整数值</span>\n<span class="token comment">//颜色是一个字符串变量</span>\n<span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;dc380d&quot;</span></span><span class="token punctuation">;</span>\n<span class="token class-name">Color</span><span class="token punctuation">(</span>int<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>radix<span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">0xFF000000</span><span class="token punctuation">)</span> <span class="token comment">//通过位运算符将Alpha设置为FF</span>\n<span class="token class-name">Color</span><span class="token punctuation">(</span>int<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>radix<span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withAlpha</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>  <span class="token comment">//通过方法将Alpha设置为FF</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="颜色亮度" tabindex="-1"><a class="header-anchor" href="#颜色亮度" aria-hidden="true">#</a> 颜色亮度</h3><p>假如，我们要实现一个背景颜色和Title可以自定义的导航栏，并且背景色为深色时我们应该让Title显示为浅色；背景色为浅色时，Title 显示为深色。要实现这个功能，我们就需要来计算背景色的亮度，然后动态来确定Title的颜色。Color 类中提供了一个<code>computeLuminance()</code>方法，它可以返回一个[0-1]的一个值，数字越大颜色就越浅，我们可以根据它来动态确定Title的颜色，下面是导航栏NavBar的简单实现：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">NavBar</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token keyword">final</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> <span class="token class-name">Color</span> color<span class="token punctuation">;</span> <span class="token comment">//背景颜色</span>\n\n  <span class="token class-name">NavBar</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span>\n    required <span class="token keyword">this</span><span class="token punctuation">.</span>color<span class="token punctuation">,</span>\n    required <span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n      constraints<span class="token punctuation">:</span> <span class="token class-name">BoxConstraints</span><span class="token punctuation">(</span>\n        minHeight<span class="token punctuation">:</span> <span class="token number">52</span><span class="token punctuation">,</span>\n        minWidth<span class="token punctuation">:</span> double<span class="token punctuation">.</span>infinity<span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      decoration<span class="token punctuation">:</span> <span class="token class-name">BoxDecoration</span><span class="token punctuation">(</span>\n        color<span class="token punctuation">:</span> color<span class="token punctuation">,</span>\n        boxShadow<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">//阴影</span>\n          <span class="token class-name">BoxShadow</span><span class="token punctuation">(</span>\n            color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>black26<span class="token punctuation">,</span>\n            offset<span class="token punctuation">:</span> <span class="token class-name">Offset</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            blurRadius<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>\n        title<span class="token punctuation">,</span>\n        style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>\n          fontWeight<span class="token punctuation">:</span> <span class="token class-name">FontWeight</span><span class="token punctuation">.</span>bold<span class="token punctuation">,</span>\n          <span class="token comment">//根据背景色亮度来确定Title颜色</span>\n          color<span class="token punctuation">:</span> color<span class="token punctuation">.</span><span class="token function">computeLuminance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.5</span> <span class="token operator">?</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white <span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>black<span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      alignment<span class="token punctuation">:</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试代码如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Column</span><span class="token punctuation">(</span>\n  children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n    <span class="token comment">//背景为蓝色，则title自动为白色</span>\n    <span class="token class-name">NavBar</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;标题&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> \n    <span class="token comment">//背景为白色，则title自动为黑色</span>\n    <span class="token class-name">NavBar</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;标题&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果如图7-4所示：</p><p><img src="'+e+'" alt="NavBar"></p><h3 id="materialcolor" tabindex="-1"><a class="header-anchor" href="#materialcolor" aria-hidden="true">#</a> MaterialColor</h3><p><code>MaterialColor</code>是实现Material Design中的颜色的类，它包含一种颜色的10个级别的渐变色。<code>MaterialColor</code>通过&quot;[]&quot;运算符的索引值来代表颜色的深度，有效的索引有：50，100，200，…，900，数字越大，颜色越深。<code>MaterialColor</code>的默认值为索引等于500的颜色。举个例子，<code>Colors.blue</code>是预定义的一个<code>MaterialColor</code>类对象，定义如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token class-name">MaterialColor</span> blue <span class="token operator">=</span> <span class="token class-name">MaterialColor</span><span class="token punctuation">(</span>\n  _bluePrimaryValue<span class="token punctuation">,</span>\n  <span class="token generics"><span class="token punctuation">&lt;</span>int<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>\n     <span class="token number">50</span><span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFFE3F2FD</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token number">100</span><span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFFBBDEFB</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token number">200</span><span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF90CAF9</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token number">300</span><span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF64B5F6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token number">400</span><span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF42A5F5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token number">500</span><span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>_bluePrimaryValue<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token number">600</span><span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF1E88E5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token number">700</span><span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF1976D2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token number">800</span><span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF1565C0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token number">900</span><span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF0D47A1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">static</span> <span class="token keyword">const</span> int _bluePrimaryValue <span class="token operator">=</span> <span class="token number">0xFF2196F3</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以根据 shadeXX 来获取具体索引的颜色。<code>Colors.blue.shade50</code>到<code>Colors.blue.shade900</code>的色值从浅蓝到深蓝渐变，效果如图7-5所示：</p><p><img src="'+p+'" alt="NavBar"></p><h2 id="_7-4-2-theme" tabindex="-1"><a class="header-anchor" href="#_7-4-2-theme" aria-hidden="true">#</a> 7.4.2 Theme</h2><p><code>Theme</code>组件可以为Material APP定义主题数据（ThemeData）。Material组件库里很多组件都使用了主题数据，如导航栏颜色、标题字体、Icon样式等。<code>Theme</code>内会使用<code>InheritedWidget</code>来为其子树共享样式数据。</p><h3 id="themedata" tabindex="-1"><a class="header-anchor" href="#themedata" aria-hidden="true">#</a> ThemeData</h3><p><code>ThemeData</code>用于保存是Material 组件库的主题数据，Material组件需要遵守相应的设计规范，而这些规范可自定义部分都定义在ThemeData中了，所以我们可以通过ThemeData来自定义应用主题。在子组件中，我们可以通过<code>Theme.of</code>方法来获取当前的<code>ThemeData</code>。</p><blockquote><p>注意：Material Design 设计规范中有些是不能自定义的，如导航栏高度，ThemeData只包含了可自定义部分。</p></blockquote><p>我们看看<code>ThemeData</code>部分数据定义：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">ThemeData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token class-name">Brightness</span><span class="token operator">?</span> brightness<span class="token punctuation">,</span> <span class="token comment">//深色还是浅色</span>\n  <span class="token class-name">MaterialColor</span><span class="token operator">?</span> primarySwatch<span class="token punctuation">,</span> <span class="token comment">//主题颜色样本，见下面介绍</span>\n  <span class="token class-name">Color</span><span class="token operator">?</span> primaryColor<span class="token punctuation">,</span> <span class="token comment">//主色，决定导航栏颜色</span>\n  <span class="token class-name">Color</span><span class="token operator">?</span> cardColor<span class="token punctuation">,</span> <span class="token comment">//卡片颜色</span>\n  <span class="token class-name">Color</span><span class="token operator">?</span> dividerColor<span class="token punctuation">,</span> <span class="token comment">//分割线颜色</span>\n  <span class="token class-name">ButtonThemeData</span> buttonTheme<span class="token punctuation">,</span> <span class="token comment">//按钮主题</span>\n  <span class="token class-name">Color</span> dialogBackgroundColor<span class="token punctuation">,</span><span class="token comment">//对话框背景颜色</span>\n  <span class="token class-name">String</span> fontFamily<span class="token punctuation">,</span> <span class="token comment">//文字字体</span>\n  <span class="token class-name">TextTheme</span> textTheme<span class="token punctuation">,</span><span class="token comment">// 字体主题，包括标题、body等文字样式</span>\n  <span class="token class-name">IconThemeData</span> iconTheme<span class="token punctuation">,</span> <span class="token comment">// Icon的默认样式</span>\n  <span class="token class-name">TargetPlatform</span> platform<span class="token punctuation">,</span> <span class="token comment">//指定平台，应用特定平台控件风格</span>\n  <span class="token class-name">ColorScheme</span><span class="token operator">?</span> colorScheme<span class="token punctuation">,</span>\n  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面只是<code>ThemeData</code>的一小部分属性，完整的数据定义读者可以查看SDK。上面属性中需要说明的是<code>primarySwatch</code>，它是主题颜色的一个&quot;样本色&quot;，通过这个样本色可以在一些条件下生成一些其它的属性，例如，如果没有指定<code>primaryColor</code>，并且当前主题不是深色主题，那么<code>primaryColor</code>就会默认为<code>primarySwatch</code>指定的颜色，还有一些相似的属性如<code>indicatorColor</code>也会受<code>primarySwatch</code>影响。</p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><p>我们实现一个路由换肤功能：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>\n<span class="token keyword">class</span> <span class="token class-name">ThemeTestRoute</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>\n  <span class="token metadata function">@override</span>\n  _ThemeTestRouteState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_ThemeTestRouteState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> _ThemeTestRouteState <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeTestRoute</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> _themeColor <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>teal<span class="token punctuation">;</span> <span class="token comment">//当前路由主题色</span>\n\n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">ThemeData</span> themeData <span class="token operator">=</span> <span class="token class-name">Theme</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token class-name">Theme</span><span class="token punctuation">(</span>\n      data<span class="token punctuation">:</span> <span class="token class-name">ThemeData</span><span class="token punctuation">(</span>\n          primarySwatch<span class="token punctuation">:</span> _themeColor<span class="token punctuation">,</span> <span class="token comment">//用于导航栏、FloatingActionButton的背景色等</span>\n          iconTheme<span class="token punctuation">:</span> <span class="token class-name">IconThemeData</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> _themeColor<span class="token punctuation">)</span> <span class="token comment">//用于Icon颜色</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token class-name">Scaffold</span><span class="token punctuation">(</span>\n        appBar<span class="token punctuation">:</span> <span class="token class-name">AppBar</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;主题测试&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        body<span class="token punctuation">:</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>\n          mainAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">MainAxisAlignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n          children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n            <span class="token comment">//第一行Icon使用主题中的iconTheme</span>\n            <span class="token class-name">Row</span><span class="token punctuation">(</span>\n                mainAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">MainAxisAlignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n                children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n                  <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>favorite<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>airport_shuttle<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;  颜色跟随主题&quot;</span></span><span class="token punctuation">)</span>\n                <span class="token punctuation">]</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token comment">//为第二行Icon自定义颜色（固定为黑色)</span>\n            <span class="token class-name">Theme</span><span class="token punctuation">(</span>\n              data<span class="token punctuation">:</span> themeData<span class="token punctuation">.</span><span class="token function">copyWith</span><span class="token punctuation">(</span>\n                iconTheme<span class="token punctuation">:</span> themeData<span class="token punctuation">.</span>iconTheme<span class="token punctuation">.</span><span class="token function">copyWith</span><span class="token punctuation">(</span>\n                    color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>black\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              child<span class="token punctuation">:</span> <span class="token class-name">Row</span><span class="token punctuation">(</span>\n                  mainAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">MainAxisAlignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n                  children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n                    <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>favorite<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>airport_shuttle<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;  颜色固定黑色&quot;</span></span><span class="token punctuation">)</span>\n                  <span class="token punctuation">]</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        floatingActionButton<span class="token punctuation">:</span> <span class="token class-name">FloatingActionButton</span><span class="token punctuation">(</span>\n            onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token comment">//切换主题</span>\n                <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span>\n                _themeColor <span class="token operator">=</span>\n                _themeColor <span class="token operator">==</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>teal <span class="token operator">?</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue <span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>teal\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            child<span class="token punctuation">:</span> <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>palette<span class="token punctuation">)</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行后点击右下角悬浮按钮则可以切换主题，如图7-6、7-7所示：</p><p><img src="'+c+'" alt="图7-6"><img src="'+o+'" alt="图7-7"></p><p>需要注意的有三点：</p><ul><li><p>可以通过局部主题覆盖全局主题，正如代码中通过 Theme 为第二行图标指定固定颜色（黑色）一样，这是一种常用的技巧，Flutter 中会经常使用这种方法来自定义子树主题。那么为什么局部主题可以覆盖全局主题？这主要是因为 widget 中使用主题样式时是通过<code>Theme.of(BuildContext context)</code>来获取的，我们看看其简化后的代码：</p></li><li><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">static</span> <span class="token class-name">ThemeData</span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">,</span> <span class="token punctuation">{</span> bool shadowThemeOnly <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token comment">// 简化代码，并非源码  </span>\n   <span class="token keyword">return</span> context<span class="token punctuation">.</span>dependOnInheritedWidgetOfExactType<span class="token generics"><span class="token punctuation">&lt;</span>_InheritedTheme<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>theme<span class="token punctuation">.</span>data\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>context.dependOnInheritedWidgetOfExactType</code> 会在 widget 树中从当前位置向上查找第一个类型为<code>_InheritedTheme</code>的 widget。所以当局部指定<code>Theme</code>后，其子树中通过<code>Theme.of()</code>向上查找到的第一个<code>_InheritedTheme</code>便是我们指定的<code>Theme</code>。</p></li><li><p>本示例是对单个路由换肤，如果想要对整个应用换肤，则可以去修改<code>MaterialApp</code>的<code>theme</code>属性。</p></li></ul>',35)],i={},u=(0,a(18580).Z)(i,[["render",function(n,s){return(0,t.wg)(),(0,t.iD)("div",null,l)}]])},18580:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);