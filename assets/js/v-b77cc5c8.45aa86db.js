"use strict";(self.webpackChunkflutter_docs=self.webpackChunkflutter_docs||[]).push([[7650],{62055:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e=JSON.parse('{"key":"v-b77cc5c8","path":"/chapter13/faq.html","title":"13.4 国际化常见问题","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"13.4.1 默认语言区域不对","slug":"_13-4-1-默认语言区域不对","link":"#_13-4-1-默认语言区域不对","children":[]},{"level":2,"title":"13.4.2 如何对应用标题进行国际化","slug":"_13-4-2-如何对应用标题进行国际化","link":"#_13-4-2-如何对应用标题进行国际化","children":[]},{"level":2,"title":"13.4.3 如何为英语系的国家指定同一个locale","slug":"_13-4-3-如何为英语系的国家指定同一个locale","link":"#_13-4-3-如何为英语系的国家指定同一个locale","children":[]}],"git":{"createdTime":1654491188000,"updatedTime":1654491188000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":1.71,"words":514},"filePathRelative":"chapter13/faq.md","localizedDate":"2022年6月6日","excerpt":""}')},73288:(n,a,s)=>{s.r(a),s.d(a,{default:()=>o});var e=s(6808);const t=[(0,e.uE)('<h1 id="_13-4-国际化常见问题" tabindex="-1"><a class="header-anchor" href="#_13-4-国际化常见问题" aria-hidden="true">#</a> 13.4 国际化常见问题</h1><p>本节主要解答一下在国际化中常见的问题。</p><h2 id="_13-4-1-默认语言区域不对" tabindex="-1"><a class="header-anchor" href="#_13-4-1-默认语言区域不对" aria-hidden="true">#</a> 13.4.1 默认语言区域不对</h2><p>在一些非大陆行货渠道买的一些Android和iOS设备，会出现默认的Locale不是中文简体的情况。这属于正常现象，但是为了防止设备获取的Locale与实际的地区不一致，所有的支持多语言的APP都必须提供一个手动选择语言的入口。</p><h2 id="_13-4-2-如何对应用标题进行国际化" tabindex="-1"><a class="header-anchor" href="#_13-4-2-如何对应用标题进行国际化" aria-hidden="true">#</a> 13.4.2 如何对应用标题进行国际化</h2><p><code>MaterialApp</code>有一个<code>title</code>属性，用于指定APP的标题。在Android系统中，APP的标题会出现在任务管理器中。所以也需要对<code>title</code>进行国际化。但是问题是很多国际化的配置都是在<code>MaterialApp</code>上设置的，我们无法在构建<code>MaterialApp</code>时通过<code>Localizations.of</code>来获取本地化资源，如：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">MaterialApp</span><span class="token punctuation">(</span>\n  title<span class="token punctuation">:</span> <span class="token class-name">DemoLocalizations</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token comment">//不能正常工作！</span>\n  localizationsDelegates<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// 本地化的代理类</span>\n    <span class="token class-name">GlobalMaterialLocalizations</span><span class="token punctuation">.</span>delegate<span class="token punctuation">,</span>\n    <span class="token class-name">GlobalWidgetsLocalizations</span><span class="token punctuation">.</span>delegate<span class="token punctuation">,</span>\n    <span class="token class-name">DemoLocalizationsDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 设置Delegate</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码运行后，<code>DemoLocalizations.of(context).title</code> 是会报错的，原因是<code>Localizations.of</code>会从当前的context沿着widget树向顶部查找<code>DemoLocalizations</code>，但是我们在<code>MaterialApp</code>中设置完<code>DemoLocalizationsDelegate</code>后，实际上<code>DemoLocalizations</code>是在当前context的子树中的，所以<code>DemoLocalizations.of(context)</code>会返回null，报错。那么我们该如何处理这种情况呢？其实很简单，我们只需要设置一个<code>onGenerateTitle</code>回调即可：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">MaterialApp</span><span class="token punctuation">(</span>\n  onGenerateTitle<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">// 此时context在Localizations的子树中</span>\n    <span class="token keyword">return</span> <span class="token class-name">DemoLocalizations</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>title<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  localizationsDelegates<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token class-name">DemoLocalizationsDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_13-4-3-如何为英语系的国家指定同一个locale" tabindex="-1"><a class="header-anchor" href="#_13-4-3-如何为英语系的国家指定同一个locale" aria-hidden="true">#</a> 13.4.3 如何为英语系的国家指定同一个locale</h2><p>英语系的国家非常多，如美国、英国、澳大利亚等，这些英语系国家虽然说的都是英语，但也会有一些区别。如果我们的APP只想提供一种英语（如美国英语）供所有英语系国家使用，我们可以在前面介绍的<code>localeListResolutionCallback</code>中来做兼容：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>localeListResolutionCallback<span class="token punctuation">:</span>\n    <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Locale</span><span class="token punctuation">&gt;</span></span> locales<span class="token punctuation">,</span> <span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Locale</span><span class="token punctuation">&gt;</span></span> supportedLocales<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 判断当前locale是否为英语系国家，如果是直接返回Locale(&#39;en&#39;, &#39;US&#39;)     </span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',12)],c={},o=(0,s(18580).Z)(c,[["render",function(n,a){return(0,e.wg)(),(0,e.iD)("div",null,t)}]])},18580:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);