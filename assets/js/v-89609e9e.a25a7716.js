"use strict";(self.webpackChunkflutter_docs=self.webpackChunkflutter_docs||[]).push([[135],{28067:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e=JSON.parse('{"key":"v-89609e9e","path":"/chapter4/flex.html","title":"4.4 弹性布局（Flex）","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"Flex","slug":"flex","link":"#flex","children":[]},{"level":3,"title":"Expanded","slug":"expanded","link":"#expanded","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1654491188000,"updatedTime":1654491188000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":2.2,"words":659},"filePathRelative":"chapter4/flex.md","localizedDate":"2022年6月6日","excerpt":""}')},80242:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});var e=a(6808);const t=a.p+"assets/img/4-13.75ff6230.png",p=[(0,e.uE)('<h1 id="_4-4-弹性布局-flex" tabindex="-1"><a class="header-anchor" href="#_4-4-弹性布局-flex" aria-hidden="true">#</a> 4.4 弹性布局（Flex）</h1><p>弹性布局允许子组件按照一定比例来分配父容器空间。弹性布局的概念在其它UI系统中也都存在，如 H5 中的弹性盒子布局，Android中 的<code>FlexboxLayout</code>等。Flutter 中的弹性布局主要通过<code>Flex</code>和<code>Expanded</code>来配合实现。</p><h3 id="flex" tabindex="-1"><a class="header-anchor" href="#flex" aria-hidden="true">#</a> Flex</h3><p><code>Flex</code>组件可以沿着水平或垂直方向排列子组件，如果你知道主轴方向，使用<code>Row</code>或<code>Column</code>会方便一些，<strong>因为<code>Row</code>和<code>Column</code>都继承自<code>Flex</code></strong>，参数基本相同，所以能使用Flex的地方基本上都可以使用<code>Row</code>或<code>Column</code>。<code>Flex</code>本身功能是很强大的，它也可以和<code>Expanded</code>组件配合实现弹性布局。接下来我们只讨论<code>Flex</code>和弹性布局相关的属性(其它属性已经在介绍<code>Row</code>和<code>Column</code>时介绍过了)。</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Flex</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n  required <span class="token keyword">this</span><span class="token punctuation">.</span>direction<span class="token punctuation">,</span> <span class="token comment">//弹性布局的方向, Row默认为水平方向，Column默认为垂直方向</span>\n  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Flex</code>继承自<code>MultiChildRenderObjectWidget</code>，对应的<code>RenderObject</code>为<code>RenderFlex</code>，<code>RenderFlex</code>中实现了其布局算法。</p><h3 id="expanded" tabindex="-1"><a class="header-anchor" href="#expanded" aria-hidden="true">#</a> Expanded</h3><p>Expanded 只能作为 Flex 的孩子（否则会报错），它可以按比例“扩伸”<code>Flex</code>子组件所占用的空间。因为 <code>Row</code>和<code>Column</code> 都继承自 Flex，所以 Expanded 也可以作为它们的孩子。</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">const</span> <span class="token class-name">Expanded</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  int flex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> \n  required <span class="token class-name">Widget</span> child<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>flex</code>参数为弹性系数，如果为 0 或<code>null</code>，则<code>child</code>是没有弹性的，即不会被扩伸占用的空间。如果大于0，所有的<code>Expanded</code>按照其 flex 的比例来分割主轴的全部空闲空间。下面我们看一个例子：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">FlexLayoutTestRoute</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>\n      children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n        <span class="token comment">//Flex的两个子widget按1：2来占据水平空间  </span>\n        <span class="token class-name">Flex</span><span class="token punctuation">(</span>\n          direction<span class="token punctuation">:</span> <span class="token class-name">Axis</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">,</span>\n          children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n            <span class="token class-name">Expanded</span><span class="token punctuation">(</span>\n              flex<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n              child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n                height<span class="token punctuation">:</span> <span class="token number">30.0</span><span class="token punctuation">,</span>\n                color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token class-name">Expanded</span><span class="token punctuation">(</span>\n              flex<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n              child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n                height<span class="token punctuation">:</span> <span class="token number">30.0</span><span class="token punctuation">,</span>\n                color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>green<span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token class-name">Padding</span><span class="token punctuation">(</span>\n          padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>top<span class="token punctuation">:</span> <span class="token number">20.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          child<span class="token punctuation">:</span> <span class="token class-name">SizedBox</span><span class="token punctuation">(</span>\n            height<span class="token punctuation">:</span> <span class="token number">100.0</span><span class="token punctuation">,</span>\n            <span class="token comment">//Flex的三个子widget，在垂直方向按2：1：1来占用100像素的空间  </span>\n            child<span class="token punctuation">:</span> <span class="token class-name">Flex</span><span class="token punctuation">(</span>\n              direction<span class="token punctuation">:</span> <span class="token class-name">Axis</span><span class="token punctuation">.</span>vertical<span class="token punctuation">,</span>\n              children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n                <span class="token class-name">Expanded</span><span class="token punctuation">(</span>\n                  flex<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n                  child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n                    height<span class="token punctuation">:</span> <span class="token number">30.0</span><span class="token punctuation">,</span>\n                    color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span>\n                  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token class-name">Spacer</span><span class="token punctuation">(</span>\n                  flex<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token class-name">Expanded</span><span class="token punctuation">(</span>\n                  flex<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                  child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n                    height<span class="token punctuation">:</span> <span class="token number">30.0</span><span class="token punctuation">,</span>\n                    color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>green<span class="token punctuation">,</span>\n                  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果如图4-13所示：</p><p><img src="'+t+'" alt="图4-13"></p><p>示例中的<code>Spacer</code>的功能是占用指定比例的空间，实际上它只是<code>Expanded</code>的一个包装类，<code>Spacer</code>的源码如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">Spacer</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>flex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">:</span> <span class="token keyword">assert</span><span class="token punctuation">(</span>flex <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token keyword">assert</span><span class="token punctuation">(</span>flex <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  \n  <span class="token keyword">final</span> int flex<span class="token punctuation">;</span>\n\n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">Expanded</span><span class="token punctuation">(</span>\n      flex<span class="token punctuation">:</span> flex<span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">SizedBox</span><span class="token punctuation">.</span><span class="token function">shrink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h3><p>弹性布局比较简单，唯一需要注意的就是<code>Row</code>、<code>Column</code>以及<code>Flex</code>的关系。</p>',17)],c={},o=(0,a(18580).Z)(c,[["render",function(n,s){return(0,e.wg)(),(0,e.iD)("div",null,p)}]])},18580:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);