"use strict";(self.webpackChunkflutter_docs=self.webpackChunkflutter_docs||[]).push([[247],{99419:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-6cc7fcc8","path":"/chapter9/animated_widgets.html","title":"9.7 动画过渡组件","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"9.7.1 自定义动画过渡组件","slug":"_9-7-1-自定义动画过渡组件","link":"#_9-7-1-自定义动画过渡组件","children":[]},{"level":2,"title":"9.7.2 Flutter预置的动画过渡组件","slug":"_9-7-2-flutter预置的动画过渡组件","link":"#_9-7-2-flutter预置的动画过渡组件","children":[]}],"git":{"createdTime":1654491188000,"updatedTime":1654491188000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":6.76,"words":2028},"filePathRelative":"chapter9/animated_widgets.md","localizedDate":"2022年6月6日","excerpt":""}')},64792:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var t=a(6808);const e=a.p+"assets/img/9-7.63c68a1c.png",p=a.p+"assets/img/9-8.a2dbf67d.png",c=a.p+"assets/img/9-9.340f1b20.png",o=[(0,t.uE)('<h1 id="_9-7-动画过渡组件" tabindex="-1"><a class="header-anchor" href="#_9-7-动画过渡组件" aria-hidden="true">#</a> 9.7 动画过渡组件</h1><p>为了表述方便，本书约定，将在Widget属性发生变化时会执行过渡动画的组件统称为”动画过渡组件“，而动画过渡组件最明显的一个特征就是它会在内部自管理<code>AnimationController</code>。我们知道，为了方便使用者可以自定义动画的曲线、执行时长、方向等，在前面介绍过的动画封装方法中，通常都需要使用者自己提供一个<code>AnimationController</code>对象来自定义这些属性值。但是，如此一来，使用者就必须得手动管理<code>AnimationController</code>，这又会增加使用的复杂性。因此，如果也能将<code>AnimationController</code>进行封装，则会大大提高动画组件的易用性。</p><h2 id="_9-7-1-自定义动画过渡组件" tabindex="-1"><a class="header-anchor" href="#_9-7-1-自定义动画过渡组件" aria-hidden="true">#</a> 9.7.1 自定义动画过渡组件</h2><p>我们要实现一个<code>AnimatedDecoratedBox</code>，它可以在<code>decoration</code>属性发生变化时，从旧状态变成新状态的过程可以执行一个过渡动画。根据前面所学的知识，我们实现了一个<code>AnimatedDecoratedBox1</code>组件：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">AnimatedDecoratedBox1</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token class-name">AnimatedDecoratedBox1</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span>\n    required <span class="token keyword">this</span><span class="token punctuation">.</span>decoration<span class="token punctuation">,</span>\n    required <span class="token keyword">this</span><span class="token punctuation">.</span>child<span class="token punctuation">,</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>curve <span class="token operator">=</span> <span class="token class-name">Curves</span><span class="token punctuation">.</span>linear<span class="token punctuation">,</span>\n    required <span class="token keyword">this</span><span class="token punctuation">.</span>duration<span class="token punctuation">,</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>reverseDuration<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">final</span> <span class="token class-name">BoxDecoration</span> decoration<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> <span class="token class-name">Widget</span> child<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> <span class="token class-name">Duration</span> duration<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> <span class="token class-name">Curve</span> curve<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> <span class="token class-name">Duration</span><span class="token operator">?</span> reverseDuration<span class="token punctuation">;</span>\n\n  <span class="token metadata function">@override</span>\n  _AnimatedDecoratedBox1State <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_AnimatedDecoratedBox1State</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> _AnimatedDecoratedBox1State <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AnimatedDecoratedBox1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token keyword">with</span> <span class="token class-name">SingleTickerProviderStateMixin</span> <span class="token punctuation">{</span>\n  <span class="token metadata function">@protected</span>\n  <span class="token class-name">AnimationController</span> <span class="token keyword">get</span> controller <span class="token operator">=</span><span class="token operator">&gt;</span> _controller<span class="token punctuation">;</span>\n  late <span class="token class-name">AnimationController</span> _controller<span class="token punctuation">;</span>\n\n  <span class="token class-name">Animation</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">&gt;</span></span> <span class="token keyword">get</span> animation <span class="token operator">=</span><span class="token operator">&gt;</span> _animation<span class="token punctuation">;</span>\n  late <span class="token class-name">Animation</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">&gt;</span></span> _animation<span class="token punctuation">;</span>\n\n  late <span class="token class-name">DecorationTween</span> _tween<span class="token punctuation">;</span>\n\n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">AnimatedBuilder</span><span class="token punctuation">(</span>\n      animation<span class="token punctuation">:</span> _animation<span class="token punctuation">,</span>\n      builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> child<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token class-name">DecoratedBox</span><span class="token punctuation">(</span>\n          decoration<span class="token punctuation">:</span> _tween<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>_animation<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n          child<span class="token punctuation">:</span> child<span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>child<span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata function">@override</span>\n  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    _controller <span class="token operator">=</span> <span class="token class-name">AnimationController</span><span class="token punctuation">(</span>\n      duration<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>duration<span class="token punctuation">,</span>\n      reverseDuration<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>reverseDuration<span class="token punctuation">,</span>\n      vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    _tween <span class="token operator">=</span> <span class="token class-name">DecorationTween</span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>decoration<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">_updateCurve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">void</span> <span class="token function">_updateCurve</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _animation <span class="token operator">=</span> <span class="token class-name">CurvedAnimation</span><span class="token punctuation">(</span>parent<span class="token punctuation">:</span> _controller<span class="token punctuation">,</span> curve<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>curve<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata function">@override</span>\n  <span class="token keyword">void</span> <span class="token function">didUpdateWidget</span><span class="token punctuation">(</span><span class="token class-name">AnimatedDecoratedBox1</span> oldWidget<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">didUpdateWidget</span><span class="token punctuation">(</span>oldWidget<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>curve <span class="token operator">!=</span> oldWidget<span class="token punctuation">.</span>curve<span class="token punctuation">)</span> <span class="token function">_updateCurve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    _controller<span class="token punctuation">.</span>duration <span class="token operator">=</span> widget<span class="token punctuation">.</span>duration<span class="token punctuation">;</span>\n    _controller<span class="token punctuation">.</span>reverseDuration <span class="token operator">=</span> widget<span class="token punctuation">.</span>reverseDuration<span class="token punctuation">;</span>\n    <span class="token comment">//正在执行过渡动画</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>decoration <span class="token operator">!=</span> <span class="token punctuation">(</span>_tween<span class="token punctuation">.</span>end <span class="token operator">?</span><span class="token operator">?</span> _tween<span class="token punctuation">.</span>begin<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      _tween\n        <span class="token punctuation">.</span><span class="token punctuation">.</span>begin <span class="token operator">=</span> _tween<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span>_animation<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token punctuation">.</span>end <span class="token operator">=</span> widget<span class="token punctuation">.</span>decoration<span class="token punctuation">;</span>\n\n      _controller\n        <span class="token punctuation">.</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0.0</span>\n        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata function">@override</span>\n  <span class="token keyword">void</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _controller<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面我们来使用<code>AnimatedDecoratedBox1</code>来实现按钮点击后背景色从蓝色过渡到红色的效果：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Color</span> _decorationColor <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">;</span>\n<span class="token keyword">var</span> duration <span class="token operator">=</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>seconds<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment">//省略无关代码</span>\n<span class="token class-name">AnimatedDecoratedBox1</span><span class="token punctuation">(</span>\n  duration<span class="token punctuation">:</span> duration<span class="token punctuation">,</span>\n  decoration<span class="token punctuation">:</span> <span class="token class-name">BoxDecoration</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> _decorationColor<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  child<span class="token punctuation">:</span> <span class="token class-name">TextButton</span><span class="token punctuation">(</span>\n    onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        _decorationColor <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>\n      <span class="token string-literal"><span class="token string">&quot;AnimatedDecoratedBox&quot;</span></span><span class="token punctuation">,</span>\n      style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>点击前效果如图9-7所示，点击后截取了过渡过程的一帧如图9-8所示： <img src="'+e+'" alt="图9-7"><img src="'+p+'" alt="图9-8"></p><p>点击后，按钮背景色会从蓝色向红色过渡，图9-9是过渡过程中的一帧，有点偏紫色，整个过渡动画结束后背景会变为红色。</p><p>上面的代码虽然实现了我们期望的功能，但是代码却比较复杂。稍加思考后，我们就可以发现，<code>AnimationController</code>的管理以及Tween更新部分的代码都是可以抽象出来的，如果我们这些通用逻辑封装成基类，那么要实现动画过渡组件只需要继承这些基类，然后定制自身不同的代码（比如动画每一帧的构建方法）即可，这样将会简化代码。</p><p>为了方便开发者来实现动画过渡组件的封装，Flutter提供了一个<code>ImplicitlyAnimatedWidget</code>抽象类，它继承自StatefulWidget，同时提供了一个对应的<code>ImplicitlyAnimatedWidgetState</code>类，<code>AnimationController</code>的管理就在<code>ImplicitlyAnimatedWidgetState</code>类中。开发者如果要封装动画，只需要分别继承<code>ImplicitlyAnimatedWidget</code>和<code>ImplicitlyAnimatedWidgetState</code>类即可，下面我们演示一下具体如何实现。</p><p>我们需要分两步实现：</p><ol><li><p>继承<code>ImplicitlyAnimatedWidget</code>类。</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">AnimatedDecoratedBox</span> <span class="token keyword">extends</span> <span class="token class-name">ImplicitlyAnimatedWidget</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token class-name">AnimatedDecoratedBox</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span>\n    required <span class="token keyword">this</span><span class="token punctuation">.</span>decoration<span class="token punctuation">,</span>\n    required <span class="token keyword">this</span><span class="token punctuation">.</span>child<span class="token punctuation">,</span>\n    <span class="token class-name">Curve</span> curve <span class="token operator">=</span> <span class="token class-name">Curves</span><span class="token punctuation">.</span>linear<span class="token punctuation">,</span>\n    required <span class="token class-name">Duration</span> duration<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>\n          key<span class="token punctuation">:</span> key<span class="token punctuation">,</span>\n          curve<span class="token punctuation">:</span> curve<span class="token punctuation">,</span>\n          duration<span class="token punctuation">:</span> duration<span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">final</span> <span class="token class-name">BoxDecoration</span> decoration<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> <span class="token class-name">Widget</span> child<span class="token punctuation">;</span>\n\n  <span class="token metadata function">@override</span>\n  _AnimatedDecoratedBoxState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">_AnimatedDecoratedBoxState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>curve</code>、<code>duration</code>、<code>reverseDuration</code>三个属性在<code>ImplicitlyAnimatedWidget </code>中已定义。 可以看到<code>AnimatedDecoratedBox</code>类和普通继承自<code>StatefulWidget</code>的类没有什么不同。</p></li><li><p>State类继承自<code>AnimatedWidgetBaseState</code>（该类继承自<code>ImplicitlyAnimatedWidgetState</code>类）。</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> _AnimatedDecoratedBoxState\n    <span class="token keyword">extends</span> <span class="token class-name">AnimatedWidgetBaseState</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AnimatedDecoratedBox</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n  late <span class="token class-name">DecorationTween</span> _decoration<span class="token punctuation">;</span>\n\n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">DecoratedBox</span><span class="token punctuation">(</span>\n      decoration<span class="token punctuation">:</span> _decoration<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span>animation<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>child<span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata function">@override</span>\n  <span class="token keyword">void</span> <span class="token function">forEachTween</span><span class="token punctuation">(</span><span class="token class-name">TweenVisitor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> visitor<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _decoration <span class="token operator">=</span> <span class="token function">visitor</span><span class="token punctuation">(</span>\n      _decoration<span class="token punctuation">,</span>\n      widget<span class="token punctuation">.</span>decoration<span class="token punctuation">,</span>\n      <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">DecorationTween</span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> value<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span> <span class="token operator">as</span> <span class="token class-name">DecorationTween</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到我们实现了<code> build</code>和<code>forEachTween</code>两个方法。在动画执行过程中，每一帧都会调用<code>build</code>方法（调用逻辑在<code>ImplicitlyAnimatedWidgetState</code>中），所以在<code>build</code>方法中我们需要构建每一帧的<code>DecoratedBox</code>状态，因此得算出每一帧的<code>decoration</code> 状态，这个我们可以通过<code> _decoration.evaluate(animation)</code> 来算出，其中<code>animation</code>是<code>ImplicitlyAnimatedWidgetState</code>基类中定义的对象，<code>_decoration</code>是我们自定义的一个<code>DecorationTween</code>类型的对象，那么现在的问题就是它是在什么时候被赋值的呢？要回答这个问题，我们就得搞清楚什么时候需要对<code>_decoration</code>赋值。我们知道<code>_decoration</code>是一个Tween，而Tween的主要职责就是定义动画的起始状态（begin）和终止状态(end)。对于<code>AnimatedDecoratedBox</code>来说，<code>decoration</code>的终止状态就是用户传给它的值，而起始状态是不确定的，有以下两种情况：</p><ol><li><code>AnimatedDecoratedBox</code>首次build，此时直接将其<code>decoration</code>值置为起始状态，即<code>_decoration</code>值为<code>DecorationTween(begin: decoration)</code> 。</li><li><code>AnimatedDecoratedBox</code>的<code>decoration</code>更新时，则起始状态为<code>_decoration.animate(animation)</code>，即<code>_decoration</code>值为<code>DecorationTween(begin: _decoration.animate(animation)，end:decoration)</code>。</li></ol></li></ol><p>现在<code>forEachTween</code>的作用就很明显了，它正是用于来更新Tween的初始值的，在上述两种情况下会被调用，而开发者只需重写此方法，并在此方法中更新Tween的起始状态值即可。而一些更新的逻辑被屏蔽在了<code>visitor</code>回调，我们只需要调用它并给它传递正确的参数即可，<code>visitor</code>方法签名如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code> <span class="token class-name">Tween</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">visitor</span><span class="token punctuation">(</span>\n   <span class="token class-name">Tween</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> tween<span class="token punctuation">,</span> <span class="token comment">//当前的tween，第一次调用为null</span>\n   <span class="token class-name">T</span> targetValue<span class="token punctuation">,</span> <span class="token comment">// 终止状态</span>\n   <span class="token class-name">TweenConstructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> constructor，<span class="token comment">//Tween构造器，在上述三种情况下会被调用以更新tween</span>\n <span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，通过继承<code>ImplicitlyAnimatedWidget</code>和<code>ImplicitlyAnimatedWidgetState</code>类可以快速的实现动画过渡组件的封装，这和我们纯手工实现相比，代码简化了很多。</p><blockquote><p>如果读者还有疑惑，建议查看<code>ImplicitlyAnimatedWidgetState</code>的源码并结合本示例代码对比理解。</p></blockquote><h2 id="_9-7-2-flutter预置的动画过渡组件" tabindex="-1"><a class="header-anchor" href="#_9-7-2-flutter预置的动画过渡组件" aria-hidden="true">#</a> 9.7.2 Flutter预置的动画过渡组件</h2><p>Flutter SDK中也预置了很多动画过渡组件，实现方式和大都和<code>AnimatedDecoratedBox</code>差不多，如表9-1所示：</p><table><thead><tr><th>组件名</th><th>功能</th></tr></thead><tbody><tr><td>AnimatedPadding</td><td>在padding发生变化时会执行过渡动画到新状态</td></tr><tr><td>AnimatedPositioned</td><td>配合Stack一起使用，当定位状态发生变化时会执行过渡动画到新的状态。</td></tr><tr><td>AnimatedOpacity</td><td>在透明度opacity发生变化时执行过渡动画到新状态</td></tr><tr><td>AnimatedAlign</td><td>当<code>alignment</code>发生变化时会执行过渡动画到新的状态。</td></tr><tr><td>AnimatedContainer</td><td>当Container属性发生变化时会执行过渡动画到新的状态。</td></tr><tr><td>AnimatedDefaultTextStyle</td><td>当字体样式发生变化时，子组件中继承了该样式的文本组件会动态过渡到新样式。</td></tr></tbody></table><p>表9-1：Flutter预置的动画过渡组件 下面我们通过一个示例来感受一下这些预置的动画过渡组件效果：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flutter/material.dart&#39;</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">AnimatedWidgetsTest</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token class-name">AnimatedWidgetsTest</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token metadata function">@override</span>\n  _AnimatedWidgetsTestState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_AnimatedWidgetsTestState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> _AnimatedWidgetsTestState <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AnimatedWidgetsTest</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n  double _padding <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n  <span class="token keyword">var</span> _align <span class="token operator">=</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>topRight<span class="token punctuation">;</span>\n  double _height <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n  double _left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token class-name">Color</span> _color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">;</span>\n  <span class="token class-name">TextStyle</span> _style <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token class-name">Color</span> _decorationColor <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">;</span>\n  double _opacity <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> duration <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token class-name">SingleChildScrollView</span><span class="token punctuation">(</span>\n      child<span class="token punctuation">:</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>\n        children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n          <span class="token class-name">ElevatedButton</span><span class="token punctuation">(</span>\n            onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                _padding <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            child<span class="token punctuation">:</span> <span class="token class-name">AnimatedPadding</span><span class="token punctuation">(</span>\n              duration<span class="token punctuation">:</span> duration<span class="token punctuation">,</span>\n              padding<span class="token punctuation">:</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>_padding<span class="token punctuation">)</span><span class="token punctuation">,</span>\n              child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;AnimatedPadding&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token class-name">SizedBox</span><span class="token punctuation">(</span>\n            height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n            child<span class="token punctuation">:</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span>\n              children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n                <span class="token class-name">AnimatedPositioned</span><span class="token punctuation">(</span>\n                  duration<span class="token punctuation">:</span> duration<span class="token punctuation">,</span>\n                  left<span class="token punctuation">:</span> _left<span class="token punctuation">,</span>\n                  child<span class="token punctuation">:</span> <span class="token class-name">ElevatedButton</span><span class="token punctuation">(</span>\n                    onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        _left <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n                      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;AnimatedPositioned&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span>\n              <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token class-name">Container</span><span class="token punctuation">(</span>\n            height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n            color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>grey<span class="token punctuation">,</span>\n            child<span class="token punctuation">:</span> <span class="token class-name">AnimatedAlign</span><span class="token punctuation">(</span>\n              duration<span class="token punctuation">:</span> duration<span class="token punctuation">,</span>\n              alignment<span class="token punctuation">:</span> _align<span class="token punctuation">,</span>\n              child<span class="token punctuation">:</span> <span class="token class-name">ElevatedButton</span><span class="token punctuation">(</span>\n                onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    _align <span class="token operator">=</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>center<span class="token punctuation">;</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;AnimatedAlign&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token class-name">AnimatedContainer</span><span class="token punctuation">(</span>\n            duration<span class="token punctuation">:</span> duration<span class="token punctuation">,</span>\n            height<span class="token punctuation">:</span> _height<span class="token punctuation">,</span>\n            color<span class="token punctuation">:</span> _color<span class="token punctuation">,</span>\n            child<span class="token punctuation">:</span> <span class="token class-name">TextButton</span><span class="token punctuation">(</span>\n              onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  _height <span class="token operator">=</span> <span class="token number">150</span><span class="token punctuation">;</span>\n                  _color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>\n                <span class="token string-literal"><span class="token string">&quot;AnimatedContainer&quot;</span></span><span class="token punctuation">,</span>\n                style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token class-name">AnimatedDefaultTextStyle</span><span class="token punctuation">(</span>\n            child<span class="token punctuation">:</span> <span class="token class-name">GestureDetector</span><span class="token punctuation">(</span>\n              child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;hello world&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  _style <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>\n                    color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span>\n                    decorationStyle<span class="token punctuation">:</span> <span class="token class-name">TextDecorationStyle</span><span class="token punctuation">.</span>solid<span class="token punctuation">,</span>\n                    decorationColor<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span>\n                  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            style<span class="token punctuation">:</span> _style<span class="token punctuation">,</span>\n            duration<span class="token punctuation">:</span> duration<span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token class-name">AnimatedOpacity</span><span class="token punctuation">(</span>\n            opacity<span class="token punctuation">:</span> _opacity<span class="token punctuation">,</span>\n            duration<span class="token punctuation">:</span> duration<span class="token punctuation">,</span>\n            child<span class="token punctuation">:</span> <span class="token class-name">TextButton</span><span class="token punctuation">(</span>\n              style<span class="token punctuation">:</span> <span class="token class-name">ButtonStyle</span><span class="token punctuation">(</span>\n                  backgroundColor<span class="token punctuation">:</span> <span class="token class-name">MaterialStateProperty</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  _opacity <span class="token operator">=</span> <span class="token number">0.2</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>\n                <span class="token string-literal"><span class="token string">&quot;AnimatedOpacity&quot;</span></span><span class="token punctuation">,</span>\n                style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token class-name">AnimatedDecoratedBox1</span><span class="token punctuation">(</span>\n            duration<span class="token punctuation">:</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>\n                milliseconds<span class="token punctuation">:</span> _decorationColor <span class="token operator">==</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red <span class="token operator">?</span> <span class="token number">400</span> <span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            decoration<span class="token punctuation">:</span> <span class="token class-name">BoxDecoration</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> _decorationColor<span class="token punctuation">)</span><span class="token punctuation">,</span>\n            child<span class="token punctuation">:</span> <span class="token class-name">Builder</span><span class="token punctuation">(</span>builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> <span class="token class-name">TextButton</span><span class="token punctuation">(</span>\n                onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    _decorationColor <span class="token operator">=</span> _decorationColor <span class="token operator">==</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue\n                        <span class="token operator">?</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red\n                        <span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">;</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>\n                  <span class="token string-literal"><span class="token string">&quot;AnimatedDecoratedBox toggle&quot;</span></span><span class="token punctuation">,</span>\n                  style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span>\n        <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token class-name">Padding</span><span class="token punctuation">(</span>\n            padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">symmetric</span><span class="token punctuation">(</span>vertical<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            child<span class="token punctuation">:</span> e<span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行后效果如图9-9所示：</p><p><img src="'+c+'" alt="图9-9"></p><p>读者可以点击一下相应组件来查看一下实际的运行效果。</p>',25)],i={},l=(0,a(18580).Z)(i,[["render",function(n,s){return(0,t.wg)(),(0,t.iD)("div",null,o)}]])},18580:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);