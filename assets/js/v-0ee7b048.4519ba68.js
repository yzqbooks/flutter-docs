"use strict";(self.webpackChunkflutter_docs=self.webpackChunkflutter_docs||[]).push([[9392],{83842:(e,t,d)=>{d.r(t),d.d(t,{data:()=>c});const c=JSON.parse('{"key":"v-0ee7b048","path":"/chapter4/intro.html","title":"4.1 布局类组件简介","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]}],"git":{"createdTime":1654491188000,"updatedTime":1654491188000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":1.45,"words":434},"filePathRelative":"chapter4/intro.md","localizedDate":"2022年6月6日","excerpt":""}')},86808:(e,t,d)=>{d.r(t),d.d(t,{default:()=>o});var c=d(6808);const r=[(0,c.uE)('<h1 id="_4-1-布局类组件简介" tabindex="-1"><a class="header-anchor" href="#_4-1-布局类组件简介" aria-hidden="true">#</a> 4.1 布局类组件简介</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>布局类组件都会包含一个或多个子组件，不同的布局类组件对子组件排列（layout）方式不同。</p><table><thead><tr><th>Widget</th><th>说明</th><th>用途</th></tr></thead><tbody><tr><td>LeafRenderObjectWidget</td><td>非容器类组件基类</td><td>Widget树的叶子节点，用于没有子节点的widget，通常基础组件都属于这一类，如Image。</td></tr><tr><td>SingleChildRenderObjectWidget</td><td>单子组件基类</td><td>包含一个子Widget，如：ConstrainedBox、DecoratedBox等</td></tr><tr><td>MultiChildRenderObjectWidget</td><td>多子组件基类</td><td>包含多个子Widget，一般都有一个children参数，接受一个Widget数组。如Row、Column、Stack等</td></tr></tbody></table><p>布局类组件就是指直接或间接继承(包含)<code>SingleChildRenderObjectWidget</code> 和<code>MultiChildRenderObjectWidget</code>的Widget，它们一般都会有一个<code>child</code>或<code>children</code>属性用于接收子 Widget。我们看一下继承关系 Widget &gt; RenderObjectWidget &gt; (Leaf/SingleChild/MultiChild)RenderObjectWidget 。</p><p><code>RenderObjectWidget</code>类中定义了创建、更新<code>RenderObject</code>的方法，子类必须实现他们，关于<code>RenderObject</code>我们现在只需要知道它是最终布局、渲染UI界面的对象即可，也就是说，对于布局类组件来说，其布局算法都是通过对应的<code>RenderObject</code>对象来实现的，所以读者如果对接下来介绍的某个布局类组件的原理感兴趣，可以查看其对应的<code>RenderObject</code>的实现，比如<code>Stack</code>（层叠布局）对应的<code>RenderObject</code>对象就是<code>RenderStack</code>，而层叠布局的实现就在<code>RenderStack</code>中。</p><p>在本章中，为了让读者对布局类 Widget 有个快速的认识，所以我们并不会深入到<code>RenderObject</code>的细节中去。在学习本章时，读者的重点是掌握不同布局组件的布局特点，具体原理和细节等我们对 Flutter 整体入门后，感兴趣的话再去研究。</p>',7)],i={},o=(0,d(18580).Z)(i,[["render",function(e,t){return(0,c.wg)(),(0,c.iD)("div",null,r)}]])},18580:(e,t)=>{t.Z=(e,t)=>{const d=e.__vccOpts||e;for(const[e,c]of t)d[e]=c;return d}}}]);