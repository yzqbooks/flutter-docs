"use strict";(self.webpackChunkflutter_docs=self.webpackChunkflutter_docs||[]).push([[4504],{83552:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e=JSON.parse('{"key":"v-7df4e132","path":"/chapter4/row_and_column.html","title":"4.3 线性布局（Row和Column）","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"主轴和纵轴","slug":"主轴和纵轴","link":"#主轴和纵轴","children":[]},{"level":3,"title":"Row","slug":"row","link":"#row","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":3,"title":"Column","slug":"column","link":"#column","children":[]},{"level":3,"title":"特殊情况","slug":"特殊情况","link":"#特殊情况","children":[]}],"git":{"createdTime":1654491188000,"updatedTime":1654491188000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":5.61,"words":1682},"filePathRelative":"chapter4/row_and_column.md","localizedDate":"2022年6月6日","excerpt":""}')},34620:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var e=a(6808);const t=a.p+"assets/img/4-9.7dbdeef5.png",c=a.p+"assets/img/4-10.74f1af5a.png",o=a.p+"assets/img/4-11.92b0837e.png",p=a.p+"assets/img/4-12.aceae047.png",i=[(0,e.uE)('<h1 id="_4-3-线性布局-row和column" tabindex="-1"><a class="header-anchor" href="#_4-3-线性布局-row和column" aria-hidden="true">#</a> 4.3 线性布局（Row和Column）</h1><p>所谓线性布局，即指沿水平或垂直方向排列子组件。Flutter 中通过<code>Row</code>和<code>Column</code>来实现线性布局，类似于Android 中的<code>LinearLayout</code>控件。<code>Row</code>和<code>Column</code>都继承自<code>Flex</code>，我们将在弹性布局一节中详细介绍<code>Flex</code>。</p><h3 id="主轴和纵轴" tabindex="-1"><a class="header-anchor" href="#主轴和纵轴" aria-hidden="true">#</a> 主轴和纵轴</h3><p>对于线性布局，有主轴和纵轴之分，如果布局是沿水平方向，那么主轴就是指水平方向，而纵轴即垂直方向；如果布局沿垂直方向，那么主轴就是指垂直方向，而纵轴就是水平方向。在线性布局中，有两个定义对齐方式的枚举类<code>MainAxisAlignment</code>和<code>CrossAxisAlignment</code>，分别代表主轴对齐和纵轴对齐。</p><h3 id="row" tabindex="-1"><a class="header-anchor" href="#row" aria-hidden="true">#</a> Row</h3><p>Row可以沿水平方向排列其子widget。定义如下：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Row</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  \n  <span class="token class-name">TextDirection</span> textDirection<span class="token punctuation">,</span>    \n  <span class="token class-name">MainAxisSize</span> mainAxisSize <span class="token operator">=</span> <span class="token class-name">MainAxisSize</span><span class="token punctuation">.</span>max<span class="token punctuation">,</span>    \n  <span class="token class-name">MainAxisAlignment</span> mainAxisAlignment <span class="token operator">=</span> <span class="token class-name">MainAxisAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span>\n  <span class="token class-name">VerticalDirection</span> verticalDirection <span class="token operator">=</span> <span class="token class-name">VerticalDirection</span><span class="token punctuation">.</span>down<span class="token punctuation">,</span>  \n  <span class="token class-name">CrossAxisAlignment</span> crossAxisAlignment <span class="token operator">=</span> <span class="token class-name">CrossAxisAlignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>textDirection</code>：表示水平方向子组件的布局顺序(是从左往右还是从右往左)，默认为系统当前Locale环境的文本方向(如中文、英语都是从左往右，而阿拉伯语是从右往左)。</li><li><code>mainAxisSize</code>：表示<code>Row</code>在主轴(水平)方向占用的空间，默认是<code>MainAxisSize.max</code>，表示尽可能多的占用水平方向的空间，此时无论子 widgets 实际占用多少水平空间，<code>Row</code>的宽度始终等于水平方向的最大宽度；而<code>MainAxisSize.min</code>表示尽可能少的占用水平空间，当子组件没有占满水平剩余空间，则<code>Row</code>的实际宽度等于所有子组件占用的的水平空间；</li><li><code>mainAxisAlignment</code>：表示子组件在<code>Row</code>所占用的水平空间内对齐方式，如果<code>mainAxisSize</code>值为<code>MainAxisSize.min</code>，则此属性无意义，因为子组件的宽度等于<code>Row</code>的宽度。只有当<code>mainAxisSize</code>的值为<code>MainAxisSize.max</code>时，此属性才有意义，<code>MainAxisAlignment.start</code>表示沿<code>textDirection</code>的初始方向对齐，如<code>textDirection</code>取值为<code>TextDirection.ltr</code>时，则<code>MainAxisAlignment.start</code>表示左对齐，<code>textDirection</code>取值为<code>TextDirection.rtl</code>时表示从右对齐。而<code>MainAxisAlignment.end</code>和<code>MainAxisAlignment.start</code>正好相反；<code>MainAxisAlignment.center</code>表示居中对齐。读者可以这么理解：<code>textDirection</code>是<code>mainAxisAlignment</code>的参考系。</li><li><code>verticalDirection</code>：表示<code>Row</code>纵轴（垂直）的对齐方向，默认是<code>VerticalDirection.down</code>，表示从上到下。</li><li><code>crossAxisAlignment</code>：表示子组件在纵轴方向的对齐方式，<code>Row</code>的高度等于子组件中最高的子元素高度，它的取值和<code>MainAxisAlignment</code>一样(包含<code>start</code>、<code>end</code>、 <code>center</code>三个值)，不同的是<code>crossAxisAlignment</code>的参考系是<code>verticalDirection</code>，即<code>verticalDirection</code>值为<code>VerticalDirection.down</code>时<code>crossAxisAlignment.start</code>指顶部对齐，<code>verticalDirection</code>值为<code>VerticalDirection.up</code>时，<code>crossAxisAlignment.start</code>指底部对齐；而<code>crossAxisAlignment.end</code>和<code>crossAxisAlignment.start</code>正好相反；</li><li><code>children</code> ：子组件数组。</li></ul><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><p>请阅读下面代码，先想象一下运行的结果：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Column</span><span class="token punctuation">(</span>\n  <span class="token comment">//测试Row对齐方式，排除Column默认居中对齐的干扰</span>\n  crossAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">CrossAxisAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span>\n  children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n    <span class="token class-name">Row</span><span class="token punctuation">(</span>\n      mainAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">MainAxisAlignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n      children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot; hello world &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot; I am Jack &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token class-name">Row</span><span class="token punctuation">(</span>\n      mainAxisSize<span class="token punctuation">:</span> <span class="token class-name">MainAxisSize</span><span class="token punctuation">.</span>min<span class="token punctuation">,</span>\n      mainAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">MainAxisAlignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n      children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot; hello world &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot; I am Jack &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token class-name">Row</span><span class="token punctuation">(</span>\n      mainAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">MainAxisAlignment</span><span class="token punctuation">.</span>end<span class="token punctuation">,</span>\n      textDirection<span class="token punctuation">:</span> <span class="token class-name">TextDirection</span><span class="token punctuation">.</span>rtl<span class="token punctuation">,</span>\n      children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot; hello world &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot; I am Jack &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token class-name">Row</span><span class="token punctuation">(</span>\n      crossAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">CrossAxisAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span>  \n      verticalDirection<span class="token punctuation">:</span> <span class="token class-name">VerticalDirection</span><span class="token punctuation">.</span>up<span class="token punctuation">,</span>\n      children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot; hello world &quot;</span></span><span class="token punctuation">,</span> style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>fontSize<span class="token punctuation">:</span> <span class="token number">30.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot; I am Jack &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实际运行结果如图4-9所示：</p><p><img src="'+t+'" alt="图4-9"></p><p>解释：第一个<code>Row</code>很简单，默认为居中对齐；第二个<code>Row</code>，由于<code>mainAxisSize</code>值为<code>MainAxisSize.min</code>，<code>Row</code>的宽度等于两个<code>Text</code>的宽度和，所以对齐是无意义的，所以会从左往右显示；第三个<code>Row</code>设置<code>textDirection</code>值为<code>TextDirection.rtl</code>，所以子组件会从右向左的顺序排列，而此时<code>MainAxisAlignment.end</code>表示左对齐，所以最终显示结果就是图中第三行的样子；第四个 Row 测试的是纵轴的对齐方式，由于两个子 Text 字体不一样，所以其高度也不同，我们指定了<code>verticalDirection</code>值为<code>VerticalDirection.up</code>，即从低向顶排列，而此时<code>crossAxisAlignment</code>值为<code>CrossAxisAlignment.start</code>表示底对齐。</p><h3 id="column" tabindex="-1"><a class="header-anchor" href="#column" aria-hidden="true">#</a> Column</h3><p><code>Column</code>可以在垂直方向排列其子组件。参数和<code>Row</code>一样，不同的是布局方向为垂直，主轴纵轴正好相反，读者可类比<code>Row</code>来理解，下面看一个例子：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flutter/material.dart&#39;</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">CenterColumnRoute</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token metadata function">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>\n      crossAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">CrossAxisAlignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n      children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;hi&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;world&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果如图4-10所示：</p><p><img src="'+c+'" alt="图4-10示例"></p><p>解释：</p><ul><li>由于我们没有指定<code>Column</code>的<code>mainAxisSize</code>，所以使用默认值<code>MainAxisSize.max</code>，则<code>Column</code>会在垂直方向占用尽可能多的空间，此例中会占满整个屏幕高度。</li><li>由于我们指定了 <code>crossAxisAlignment</code> 属性为<code>CrossAxisAlignment.center</code>，那么子项在<code>Column</code>纵轴方向（此时为水平方向）会居中对齐。注意，在水平方向对齐是有边界的，总宽度为<code>Column</code>占用空间的实际宽度，而实际的宽度取决于子项中宽度最大的Widget。在本例中，<code>Column</code>有两个子Widget，而显示“world”的<code>Text</code>宽度最大，所以<code>Column</code>的实际宽度则为<code>Text(&quot;world&quot;)</code> 的宽度，所以居中对齐后<code>Text(&quot;hi&quot;)</code>会显示在<code>Text(&quot;world&quot;)</code>的中间部分。</li></ul><p><strong>实际上，<code>Row</code>和<code>Column</code>都只会在主轴方向占用尽可能大的空间，而纵轴的长度则取决于他们最大子元素的长度</strong>。如果我们想让本例中的两个文本控件在整个手机屏幕中间对齐，我们有两种方法：</p><ul><li><p>将<code>Column</code>的宽度指定为屏幕宽度；这很简单，我们可以通过<code>ConstrainedBox</code>或<code>SizedBox</code>（我们将在后面章节中专门介绍这两个Widget）来强制更改宽度限制，例如：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">ConstrainedBox</span><span class="token punctuation">(</span>\n  constraints<span class="token punctuation">:</span> <span class="token class-name">BoxConstraints</span><span class="token punctuation">(</span>minWidth<span class="token punctuation">:</span> double<span class="token punctuation">.</span>infinity<span class="token punctuation">)</span><span class="token punctuation">,</span> \n  child<span class="token punctuation">:</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>\n    crossAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">CrossAxisAlignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n    children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n      <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;hi&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;world&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将<code>minWidth</code>设为<code>double.infinity</code>，可以使宽度占用尽可能多的空间。</p></li><li><p>使用<code>Center</code> 组件；我们将在后面章节中介绍。</p></li></ul><h3 id="特殊情况" tabindex="-1"><a class="header-anchor" href="#特殊情况" aria-hidden="true">#</a> 特殊情况</h3><p>如果<code>Row</code>里面嵌套<code>Row</code>，或者<code>Column</code>里面再嵌套<code>Column</code>，那么只有最外面的<code>Row</code>或<code>Column</code>会占用尽可能大的空间，里面<code>Row</code>或<code>Column</code>所占用的空间为实际大小，下面以<code>Column</code>为例说明：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Container</span><span class="token punctuation">(</span>\n  color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>green<span class="token punctuation">,</span>\n  child<span class="token punctuation">:</span> <span class="token class-name">Padding</span><span class="token punctuation">(</span>\n    padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">16.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    child<span class="token punctuation">:</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>\n      crossAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">CrossAxisAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span>\n      mainAxisSize<span class="token punctuation">:</span> <span class="token class-name">MainAxisSize</span><span class="token punctuation">.</span>max<span class="token punctuation">,</span> <span class="token comment">//有效，外层Colum高度为整个屏幕</span>\n      children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n        <span class="token class-name">Container</span><span class="token punctuation">(</span>\n          color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span>\n          child<span class="token punctuation">:</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>\n            mainAxisSize<span class="token punctuation">:</span> <span class="token class-name">MainAxisSize</span><span class="token punctuation">.</span>max<span class="token punctuation">,</span><span class="token comment">//无效，内层Colum高度为实际高度  </span>\n            children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n              <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;hello world &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;I am Jack &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果如图4-11所示：</p><p><img src="'+o+'" alt="图4-11"></p><p>如果要让里面的<code>Column</code>占满外部<code>Column</code>，可以使用<code>Expanded</code> 组件：</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Expanded</span><span class="token punctuation">(</span> \n  child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n    color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span>\n    child<span class="token punctuation">:</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>\n      mainAxisAlignment<span class="token punctuation">:</span> <span class="token class-name">MainAxisAlignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span> <span class="token comment">//垂直方向居中对齐</span>\n      children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>\n        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;hello world &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;I am Jack &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果如图4-12所示：</p><p><img src="'+p+'" alt="图4-12"></p><p>我们将在介绍弹性布局时详细介绍Expanded。</p>',33)],l={},u=(0,a(18580).Z)(l,[["render",function(n,s){return(0,e.wg)(),(0,e.iD)("div",null,i)}]])},18580:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);